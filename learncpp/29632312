<!doctype html>
<html lang="zh" class=""><head><meta charset="utf-8"/><title data-react-helmet="true">【CEval系列】实现四则运算</title><meta name="renderer" content="webkit"/><meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0"/><meta name="force-rendering" content="webkit"/><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/><meta name="google-site-verification" content="FTeR0c8arOPKh8c5DYh_9uu98_zJbaWw53J-Sch9MTg"/><link rel="shortcut icon" href="https://static.zhihu.com/static/favicon.ico" type="image/x-icon"/><link href="//static.zhihu.com/hemingway/app.36335a6d5e421112e55e12ecfbff7ac5.css" rel="stylesheet"/><style></style></head><body><div id="react-root"><div><div class="Layout av-cardBackground" data-zop-userToken="{&quot;userToken&quot;:&quot;&quot;}"><div class="Layout-navbarHolder"><header class="Navbar"><div class="Navbar-logo-wrapper"><a class="Navbar-logo icon-ic_zhihu_logo" href="//www.zhihu.com" target="_blank" rel="noopener noreferrer" aria-label="知乎首页"></a></div><div class="Navbar-postTitle Navbar-title"><a href="https://zhuanlan.zhihu.com/learncpp"><img class="Navbar-columnIcon" alt="学习C++" src="https://pic2.zhimg.com/v2-bf63794c542fc73b11e17014b7e0d01d_m.jpg"/></a><div class="Navbar-postTitleName"><span class="Navbar-postTitleMeta">首发于</span><a class="Navbar-postTitleMain" href="https://zhuanlan.zhihu.com/learncpp">学习C++</a></div></div><div class="Navbar-functionality"><a class="Navbar-write"><i class="icon icon-ic_nav_new"></i>写文章</a><button class="Button Navbar-loginButon Button--blue" type="button">登录</button></div></header></div><div></div><div class="Layout-main av-card av-paddingBottom av-bodyFont Layout-titleImage--normal"><div class="PostIndex-header av-paddingTop av-card" data-zop="{&quot;authorName&quot;:&quot;陈安&quot;,&quot;itemId&quot;:&quot;29632312&quot;,&quot;title&quot;:&quot;【CEval系列】实现四则运算&quot;,&quot;type&quot;:&quot;article&quot;}"><div class="TitleImage"><img alt="【CEval系列】实现四则运算" src="https://pic1.zhimg.com/v2-aa4922fba3eb040ecb03d67c2d2b2cc4_r.png" class="TitleImage-imagePure"/></div><h1 class="PostIndex-title av-paddingSide av-titleFont">【CEval系列】实现四则运算</h1><div class="PostIndex-author"><a href="https://www.zhihu.com/people/bajdcc" target="_blank" rel="noopener noreferrer"><img class="Avatar-hemingway PostIndex-authorAvatar Avatar--xs" alt="陈安" src="https://pic4.zhimg.com/50/v2-cd6d61ad9ef94c41b9e77f8e0f727893_xs.jpg" srcset="https://pic4.zhimg.com/50/v2-cd6d61ad9ef94c41b9e77f8e0f727893_l.jpg 2x"/></a><a href="https://www.zhihu.com/people/bajdcc" target="_blank" class="PostIndex-authorName">陈安</a><span class="Bull"></span><div class="HoverTitle" data-hover-title="Sun, Sep 24, 2017 10:54 PM"><time datetime="Sun Sep 24 2017 22:54:49 GMT+0800 (CST)">2 months ago</time></div></div></div><div class="RichText PostIndex-content av-paddingSide av-card"><p><b>更新：可以用dev-cpp编译了（注意选-std=c++11），精简了代码，总的来说只有一千行左右吧，<a href="http://link.zhihu.com/?target=https%3A//github.com/bajdcc/learnstl/tree/master/projects/calc" class=" wrap external" target="_blank" rel="nofollow noreferrer">bajdcc/learnstl<i class="icon-external"></i></a>。</b></p><p>================================</p><p>花了几天鼓捣&amp;debug，终于大功告成。</p><p>源码：<a href="http://link.zhihu.com/?target=https%3A//github.com/bajdcc/CEval" class=" wrap external" target="_blank" rel="nofollow noreferrer">bajdcc/CEval<i class="icon-external"></i></a>，见里面的CEval.cpp。</p><p>工程源码阅读基础：</p><ol><li>表达式求值部分。不需要学习正则表达式因为我没用它。Lexer部分需要编译原理的LL1分析，解释器部分需要学习AST以及树的操作。模版的话我没怎么用，就在类型转换中用了一下。</li><li>人民币翻译部分。需要熟悉各种常见设计模式（上一篇已介绍）。需要熟悉shared_ptr等动态指针。了解汇编中的常用指令。</li></ol><p><br></p><h2>CEval工程的“脑洞”之实现</h2><p>这个工程<b>对我而言</b>，有几大新颖之处：</p><ol><li><b>非递归实现表达式求值，即不用递归的方式（只用for循环）完成LL(1)分析</b></li><li><b>类型转换，三大类型int/double/string，int+double=&gt;double，int溢出转double</b></li><li><b>手动实现字符串转换成int/double，即atoi/atof</b></li></ol><p>我的看法：</p><ol><li><b>自己实现atoi/atof。</b>好处：考验基本功，虽然过程繁琐，但最终是可以完成的。</li><li><b>类型转换。</b>遇到解释器/脚本的实现，就一定会碰到类型转换问题，实现方式有多种。</li><li><b>非递归求值。</b>呵，常见的LL分析是必然递归的，我就是不用，当然也能实现，后面会写几篇说明的文章。</li></ol><p><br></p><h2>实现非递归求值的必要条件</h2><p>一个简单的树前/中/序非递归遍历就已经可以吓倒大部分人了，非递归搞LL，这是不是不要命了？当然，不去递归是有好处滴，就是不爆栈。</p><p>必要条件有：</p><ol><li>及时归约。依照算符优先文法，掌握归约的时机，那就是优先级再也高不了当前的时候。碰到更低优先级的操作符，就立马将当前结点归约。</li><li>线索结点。有一个动态结点，指向当前的最新的操作符，如3+4就指向+号，3+4*5就指向*号。它的目标是记录可以归约的第一个结点，归约后，可尝试再向上归约。</li><li>结点栈。这是针对实现括号功能而言的，可惜，括号我也不用递归做。括号是可以递归，递归就要保存现场，很可惜，现场我只有两个东西：根结点和线索结点。所以，只要给两个结点一个栈去保存就可以了。</li></ol><p><br></p><h2>尚未实现的部分</h2><ol><li>只限简单的优先级层次。我只实现四则运算，所以说实在的优先级只有两层，即不可简化的树最高就是3层。如果优先级有好几层，那我的代码有可能出现bug（没考虑这茬）。</li><li>只限二元运算。一元运算的话，我暂时还没测试 or 实现它。</li></ol><p><br></p><h2>本项目的意义</h2><ol><li>维持一下写parser的水平</li><li>实现自己的想法，印证自己的思路</li><li>不时使用一下先前没用过的东西，刷新自己陈旧的三观</li><li>给C++本专栏打call</li><li>有点动力，不让自己无聊</li><li>用Java/C#写容易吧，哈哈，用C++试试，累不死你</li></ol><p><br></p><h2>编程最核心的意义</h2><p><b>编程是为了印证自己的想法/设计是否正确，不是瞎乱搞</b></p><p><b>为什么？编程理论上可以干任何事，我要证明我可以实现我想做的功能。我是为了印证想法而去编程。</b></p><p><b>举例子：</b></p><ul><li><a href="http://link.zhihu.com/?target=https%3A//github.com/bajdcc/jMiniLang" class=" wrap external" target="_blank" rel="nofollow noreferrer">bajdcc/jMiniLang<i class="icon-external"></i></a>，印证想法：仅用管道和共享可以实现脚本操作系统</li><li><a href="http://link.zhihu.com/?target=https%3A//github.com/bajdcc/GameFramework" class=" wrap external" target="_blank" rel="nofollow noreferrer">bajdcc/GameFramework<i class="icon-external"></i></a>，印证想法：用lua实现UI逻辑</li><li><a href="http://link.zhihu.com/?target=https%3A//github.com/bajdcc/jProlog" class=" wrap external" target="_blank" rel="nofollow noreferrer">bajdcc/jProlog<i class="icon-external"></i></a>，印证想法：穷举搜索</li><li><a href="http://link.zhihu.com/?target=https%3A//github.com/bajdcc/SimuCircult" class=" wrap external" target="_blank" rel="nofollow noreferrer">bajdcc/SimuCircult<i class="icon-external"></i></a>，印证想法：(1)电路 - 要实现图灵完备的电路需要合理的延迟和更简单的世界观设定，没法实现SR锁存器，证明失败   (2) 闪电模拟 - 证明失败</li></ul><p>有了想法，脑子里有了<b>设计蓝图</b>，这下才开始开工写代码，然后de个bug，不断测试/返工，最终把作品做出来，印证先前的想法是正确的。<b>最实质的是一个设计的过程</b>，如果都没有设计，那怎样有写代码的方向呢？</p><p>设计的过程就是架构的过程，但一开始所以模块就如此详细吗？当然不是。设计蓝图的作用，就是先把关键的/依赖少的部分先实现。然后慢慢添加/丰富功能。</p><p>举例子：</p><p>实现四则运算，可以很简单，就100行以内，但功能单一（上学肯定写过这个啦）。</p><p>然而，本工程实现四则运算，不会那么简单，粗略3k行代码（其中表达式部分1k行，rmb部分2k行）。思路当然是先做lexer再做parser了，但我构思lexer首先要做atoi/atof吧，因为这是最没依赖的东西。不过本项目中还不算，最底层是RefString流过滤器哈哈。那我就要最先实现流过滤器了，呵呵，又要折腾它了，不过我已经接触/实现过，只要copy下自己代码就ok了。所以要拼积累啊，做同样的东西，做得越多，就做得越快，因为先前的代码会不断积累，先前的思路会不断沉淀，当你有了新的想法/想做新的东西时，那个思路就会蹦出来，然后一拍脑袋，soga！是这样子！不过我转而一想，也许我可以尝试一种新方法……因此就有了这篇文章啦~</p><p><br></p><p>后面的内容就很肥了（正经点，全是C++）：</p><ul><li>设计模式的使用</li><li>挺有用的工具类（自己造轮子）</li><li>不走寻常路实现四则运算</li></ul></div><div class="PostIndex-footer"><div class="PostIndex-topics TopicItem-wrapper"><a class="TopicItem u-ellipsis PostIndex-topicItem" href="https://www.zhihu.com/topic/19601705">C / C++</a><a class="TopicItem u-ellipsis PostIndex-topicItem" href="https://www.zhihu.com/topic/19599592">设计模式</a><a class="TopicItem u-ellipsis PostIndex-topicItem" href="https://www.zhihu.com/topic/19554298">编程</a></div><div class="PostIndex-reviewers"></div><div class="PostIndex-vote"><button class="Button PostIndex-voteButton Button--green" aria-label="赞" type="button"><i class="icon icon-ic_column_like"></i>21</button><div class="PostIndex-voters"><div class="HoverTitle HoverTitle--slim" data-hover-title="吴波"><a href="https://www.zhihu.com/people/wu-bo-19-31" class="PostIndex-voter" target="_blank"><img class="Avatar-hemingway Avatar--is" alt="吴波" src="https://pic3.zhimg.com/50/03b42d62450ffcb05428b958512bea22_is.jpg" srcset="https://pic3.zhimg.com/50/03b42d62450ffcb05428b958512bea22_im.jpg 2x"/></a></div><div class="HoverTitle HoverTitle--slim" data-hover-title="遗迹"><a href="https://www.zhihu.com/people/wlt130" class="PostIndex-voter" target="_blank"><img class="Avatar-hemingway Avatar--is" alt="遗迹" src="https://pic3.zhimg.com/50/0c75268b648f5ea1f183690b36478016_is.jpg" srcset="https://pic3.zhimg.com/50/0c75268b648f5ea1f183690b36478016_im.jpg 2x"/></a></div><div class="HoverTitle HoverTitle--slim" data-hover-title="yeu yang"><a href="https://www.zhihu.com/people/yeu-yang" class="PostIndex-voter" target="_blank"><img class="Avatar-hemingway Avatar--is" alt="yeu yang" src="https://pic1.zhimg.com/da8e974dc_is.jpg" srcset="https://pic1.zhimg.com/da8e974dc_im.jpg 2x"/></a></div><div class="HoverTitle HoverTitle--slim" data-hover-title="Muxter"><a href="https://www.zhihu.com/people/Muxter" class="PostIndex-voter" target="_blank"><img class="Avatar-hemingway Avatar--is" alt="Muxter" src="https://pic4.zhimg.com/50/v2-8c165ad6d006fa028c5ab4e244e232d7_is.jpg" srcset="https://pic4.zhimg.com/50/v2-8c165ad6d006fa028c5ab4e244e232d7_im.jpg 2x"/></a></div><div class="HoverTitle HoverTitle--slim" data-hover-title="dorence"><a href="https://www.zhihu.com/people/dorence" class="PostIndex-voter" target="_blank"><img class="Avatar-hemingway Avatar--is" alt="dorence" src="https://pic1.zhimg.com/da8e974dc_is.jpg" srcset="https://pic1.zhimg.com/da8e974dc_im.jpg 2x"/></a></div><a href="/p/29632312/voters" target="_blank" rel="noopener noreferrer" title="查看全部" class="PostIndex-allVoters"><i class="icon-ic_like_more"></i></a></div></div><div class="PostIndex-control"><div class="Fav"><button class="Button Button Button--plain FavButton" type="button"><i class="icon icon-ic_collect"></i>收藏</button></div><div class="PostShare"><div class="Menu"><button class="Button Button Button--plain MenuButton MenuButton-listen-hover Button Button--plain" type="button"><i class="icon icon-ic_column_share"></i>分享</button><div class="Menu-dropdown" style="visibility:hidden;"></div></div></div><div class="Report"><button class="Button Button Button--plain ReportButton" type="button"><i class="icon icon-ic_column_report"></i>举报</button></div></div></div><div class="Contributes PostIndex-contributes av-card"><div class="BlockTitle av-marginLeft av-borderColor"><span class="BlockTitle-title">文章被以下专栏收录</span><span class="BlockTitle-line"></span></div><ul class="Contributes-list"><li style="opacity:1;max-height:300px;" class="Contributes-listItem av-borderColor av-marginLeft"><div class="ContributesItem av-paddingRight" role="link"><a class="ContributesItem-avatar" href="/learncpp"><img class="Avatar-hemingway" src="https://pic2.zhimg.com/v2-bf63794c542fc73b11e17014b7e0d01d_m.jpg" srcset="https://pic2.zhimg.com/v2-bf63794c542fc73b11e17014b7e0d01d_xl.jpg 2x"/></a><div class="ContributesItem-info"><div class="ContributesItem-nameLine"><a class="ContributesItem-name" href="https://zhuanlan.zhihu.com/learncpp">学习C++</a></div><p class="ContributesItem-intro u-ellipsis">写写C++</p></div><a class="ContributesItem-entrance" href="https://zhuanlan.zhihu.com/learncpp">进入专栏</a></div></li></ul></div><div class="PostComment"><div class="BlockTitle av-marginLeft av-borderColor PostComment-blockTitle"><span class="BlockTitle-title">9 条评论</span><span class="BlockTitle-line"></span></div><div class="CommentEditor PostComment-mainEditor"><div class="CommentEditor-input"><div class="CommentEditor-actions"><button class="Button Button--plain" type="button">取消</button><button class="Button Button--blue" disabled="" type="button">评论</button></div></div></div><div class="PostCommentList"></div></div><div class="PostIndex-recommendZone av-card"><div class="BlockTitle av-marginLeft av-borderColor"><span class="BlockTitle-title">推荐阅读</span><span class="BlockTitle-line"></span></div><div class="Spinner"></div></div></div></div></div></div><textarea id="clientConfig" hidden="">{&quot;debug&quot;:false,&quot;apiRoot&quot;:&quot;&quot;,&quot;paySDK&quot;:&quot;https:\u002F\u002Fpay.zhihu.com\u002Fapi\u002Fjs&quot;,&quot;wechatConfigAPI&quot;:&quot;\u002Fapi\u002Fwechat\u002Fjssdkconfig&quot;,&quot;name&quot;:&quot;production&quot;,&quot;instance&quot;:&quot;column&quot;,&quot;tokens&quot;:{&quot;X-XSRF-TOKEN&quot;:null,&quot;X-UDID&quot;:null,&quot;Authorization&quot;:&quot;oauth c3cef7c66a1843f8b3a9e6a1e3160e20&quot;}}</textarea><textarea id="preloadedState" hidden="">{&quot;database&quot;:{&quot;Post&quot;:{&quot;29632312&quot;:{&quot;isPending&quot;:false,&quot;contributes&quot;:[{&quot;sourceColumn&quot;:{&quot;lastUpdated&quot;:1497249764,&quot;description&quot;:&quot;玩玩有趣的东西&quot;,&quot;permission&quot;:&quot;COLUMN_PUBLIC&quot;,&quot;memberId&quot;:10760740,&quot;contributePermission&quot;:&quot;COLUMN_PUBLIC&quot;,&quot;translatedCommentPermission&quot;:&quot;all&quot;,&quot;canManage&quot;:true,&quot;intro&quot;:&quot;写写C++&quot;,&quot;urlToken&quot;:&quot;learncpp&quot;,&quot;id&quot;:25963,&quot;imagePath&quot;:&quot;v2-bf63794c542fc73b11e17014b7e0d01d.jpg&quot;,&quot;slug&quot;:&quot;learncpp&quot;,&quot;applyReason&quot;:&quot;0&quot;,&quot;name&quot;:&quot;学习C++&quot;,&quot;title&quot;:&quot;学习C++&quot;,&quot;url&quot;:&quot;https:\u002F\u002Fzhuanlan.zhihu.com\u002Flearncpp&quot;,&quot;commentPermission&quot;:&quot;COLUMN_ALL_CAN_COMMENT&quot;,&quot;canPost&quot;:true,&quot;created&quot;:1483611626,&quot;state&quot;:&quot;COLUMN_NORMAL&quot;,&quot;followers&quot;:2913,&quot;avatar&quot;:{&quot;id&quot;:&quot;v2-bf63794c542fc73b11e17014b7e0d01d&quot;,&quot;template&quot;:&quot;https:\u002F\u002Fpic2.zhimg.com\u002F{id}_{size}.jpg&quot;},&quot;activateAuthorRequested&quot;:false,&quot;following&quot;:false,&quot;imageUrl&quot;:&quot;https:\u002F\u002Fpic2.zhimg.com\u002Fv2-bf63794c542fc73b11e17014b7e0d01d_l.jpg&quot;,&quot;articlesCount&quot;:53},&quot;state&quot;:&quot;accepted&quot;,&quot;targetPost&quot;:{&quot;titleImage&quot;:&quot;https:\u002F\u002Fpic1.zhimg.com\u002Fv2-aa4922fba3eb040ecb03d67c2d2b2cc4_r.png&quot;,&quot;lastUpdated&quot;:1506301829,&quot;imagePath&quot;:&quot;v2-aa4922fba3eb040ecb03d67c2d2b2cc4.png&quot;,&quot;permission&quot;:&quot;ARTICLE_PUBLIC&quot;,&quot;topics&quot;:[17215,16495,1354],&quot;summary&quot;:&quot;\u003Cb\u003E更新：可以用dev-cpp编译了（注意选-std=c++11），精简了代码，总的来说只有一千行左右吧，\u003Ca href=\&quot;https:\u002F\u002Fgithub.com\u002Fbajdcc\u002Flearnstl\u002Ftree\u002Fmaster\u002Fprojects\u002Fcalc\&quot;\u003Ebajdcc\u002Flearnstl\u003C\u002Fa\u003E。\u003C\u002Fb\u003E================================花了几天鼓捣&amp;amp;debug，终于大功告成。源码：\u003Ca href=\&quot;https:\u002F\u002Fgithub.com\u002Fbajdcc\u002FCEval\&quot;\u003Ebajdcc\u002FCEval\u003C\u002Fa\u003E，见里面的CEval.cpp。工程源码阅读基础：表达式求值部…&quot;,&quot;copyPermission&quot;:&quot;ARTICLE_COPYABLE&quot;,&quot;translatedCommentPermission&quot;:&quot;all&quot;,&quot;likes&quot;:0,&quot;origAuthorId&quot;:0,&quot;publishedTime&quot;:&quot;2017-09-24T22:54:49+08:00&quot;,&quot;sourceUrl&quot;:&quot;&quot;,&quot;urlToken&quot;:29632312,&quot;id&quot;:4041452,&quot;withContent&quot;:false,&quot;slug&quot;:29632312,&quot;bigTitleImage&quot;:false,&quot;title&quot;:&quot;【CEval系列】实现四则运算&quot;,&quot;url&quot;:&quot;\u002Fp\u002F29632312&quot;,&quot;commentPermission&quot;:&quot;ARTICLE_ALL_CAN_COMMENT&quot;,&quot;snapshotUrl&quot;:&quot;&quot;,&quot;created&quot;:1506264889,&quot;comments&quot;:0,&quot;columnId&quot;:0,&quot;content&quot;:&quot;&quot;,&quot;parentId&quot;:0,&quot;state&quot;:&quot;ARTICLE_PUBLISHED&quot;,&quot;imageUrl&quot;:&quot;https:\u002F\u002Fpic1.zhimg.com\u002Fv2-aa4922fba3eb040ecb03d67c2d2b2cc4_r.png&quot;,&quot;author&quot;:{&quot;bio&quot;:&quot;专业研究野生技术&quot;,&quot;isFollowing&quot;:false,&quot;hash&quot;:&quot;7a228f3d98a5d011f952110c10dc4976&quot;,&quot;uid&quot;:71809588264960,&quot;isOrg&quot;:false,&quot;slug&quot;:&quot;bajdcc&quot;,&quot;isFollowed&quot;:false,&quot;description&quot;:&quot;专业研究野生技术 https:\u002F\u002Fgithub.com\u002Fbajdcc&quot;,&quot;name&quot;:&quot;陈安&quot;,&quot;profileUrl&quot;:&quot;https:\u002F\u002Fwww.zhihu.com\u002Fpeople\u002Fbajdcc&quot;,&quot;avatar&quot;:{&quot;id&quot;:&quot;v2-cd6d61ad9ef94c41b9e77f8e0f727893&quot;,&quot;template&quot;:&quot;https:\u002F\u002Fpic4.zhimg.com\u002F50\u002F{id}_{size}.jpg&quot;},&quot;isOrgWhiteList&quot;:false,&quot;isBanned&quot;:false},&quot;memberId&quot;:10760740,&quot;excerptTitle&quot;:&quot;&quot;,&quot;voteType&quot;:&quot;ARTICLE_VOTE_CLEAR&quot;},&quot;id&quot;:835441}],&quot;title&quot;:&quot;【CEval系列】实现四则运算&quot;,&quot;author&quot;:&quot;bajdcc&quot;,&quot;content&quot;:&quot;\u003Cp\u003E\u003Cb\u003E更新：可以用dev-cpp编译了（注意选-std=c++11），精简了代码，总的来说只有一千行左右吧，\u003Ca href=\&quot;http:\u002F\u002Flink.zhihu.com\u002F?target=https%3A\u002F\u002Fgithub.com\u002Fbajdcc\u002Flearnstl\u002Ftree\u002Fmaster\u002Fprojects\u002Fcalc\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;\u003Ebajdcc\u002Flearnstl\u003Ci class=\&quot;icon-external\&quot;\u003E\u003C\u002Fi\u003E\u003C\u002Fa\u003E。\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp\u003E================================\u003C\u002Fp\u003E\u003Cp\u003E花了几天鼓捣&amp;amp;debug，终于大功告成。\u003C\u002Fp\u003E\u003Cp\u003E源码：\u003Ca href=\&quot;http:\u002F\u002Flink.zhihu.com\u002F?target=https%3A\u002F\u002Fgithub.com\u002Fbajdcc\u002FCEval\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;\u003Ebajdcc\u002FCEval\u003Ci class=\&quot;icon-external\&quot;\u003E\u003C\u002Fi\u003E\u003C\u002Fa\u003E，见里面的CEval.cpp。\u003C\u002Fp\u003E\u003Cp\u003E工程源码阅读基础：\u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003E表达式求值部分。不需要学习正则表达式因为我没用它。Lexer部分需要编译原理的LL1分析，解释器部分需要学习AST以及树的操作。模版的话我没怎么用，就在类型转换中用了一下。\u003C\u002Fli\u003E\u003Cli\u003E人民币翻译部分。需要熟悉各种常见设计模式（上一篇已介绍）。需要熟悉shared_ptr等动态指针。了解汇编中的常用指令。\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp\u003E\u003Cbr\u003E\u003C\u002Fp\u003E\u003Ch2\u003ECEval工程的“脑洞”之实现\u003C\u002Fh2\u003E\u003Cp\u003E这个工程\u003Cb\u003E对我而言\u003C\u002Fb\u003E，有几大新颖之处：\u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003E\u003Cb\u003E非递归实现表达式求值，即不用递归的方式（只用for循环）完成LL(1)分析\u003C\u002Fb\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cb\u003E类型转换，三大类型int\u002Fdouble\u002Fstring，int+double=&amp;gt;double，int溢出转double\u003C\u002Fb\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cb\u003E手动实现字符串转换成int\u002Fdouble，即atoi\u002Fatof\u003C\u002Fb\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp\u003E我的看法：\u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003E\u003Cb\u003E自己实现atoi\u002Fatof。\u003C\u002Fb\u003E好处：考验基本功，虽然过程繁琐，但最终是可以完成的。\u003C\u002Fli\u003E\u003Cli\u003E\u003Cb\u003E类型转换。\u003C\u002Fb\u003E遇到解释器\u002F脚本的实现，就一定会碰到类型转换问题，实现方式有多种。\u003C\u002Fli\u003E\u003Cli\u003E\u003Cb\u003E非递归求值。\u003C\u002Fb\u003E呵，常见的LL分析是必然递归的，我就是不用，当然也能实现，后面会写几篇说明的文章。\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp\u003E\u003Cbr\u003E\u003C\u002Fp\u003E\u003Ch2\u003E实现非递归求值的必要条件\u003C\u002Fh2\u003E\u003Cp\u003E一个简单的树前\u002F中\u002F序非递归遍历就已经可以吓倒大部分人了，非递归搞LL，这是不是不要命了？当然，不去递归是有好处滴，就是不爆栈。\u003C\u002Fp\u003E\u003Cp\u003E必要条件有：\u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003E及时归约。依照算符优先文法，掌握归约的时机，那就是优先级再也高不了当前的时候。碰到更低优先级的操作符，就立马将当前结点归约。\u003C\u002Fli\u003E\u003Cli\u003E线索结点。有一个动态结点，指向当前的最新的操作符，如3+4就指向+号，3+4*5就指向*号。它的目标是记录可以归约的第一个结点，归约后，可尝试再向上归约。\u003C\u002Fli\u003E\u003Cli\u003E结点栈。这是针对实现括号功能而言的，可惜，括号我也不用递归做。括号是可以递归，递归就要保存现场，很可惜，现场我只有两个东西：根结点和线索结点。所以，只要给两个结点一个栈去保存就可以了。\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp\u003E\u003Cbr\u003E\u003C\u002Fp\u003E\u003Ch2\u003E尚未实现的部分\u003C\u002Fh2\u003E\u003Col\u003E\u003Cli\u003E只限简单的优先级层次。我只实现四则运算，所以说实在的优先级只有两层，即不可简化的树最高就是3层。如果优先级有好几层，那我的代码有可能出现bug（没考虑这茬）。\u003C\u002Fli\u003E\u003Cli\u003E只限二元运算。一元运算的话，我暂时还没测试 or 实现它。\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp\u003E\u003Cbr\u003E\u003C\u002Fp\u003E\u003Ch2\u003E本项目的意义\u003C\u002Fh2\u003E\u003Col\u003E\u003Cli\u003E维持一下写parser的水平\u003C\u002Fli\u003E\u003Cli\u003E实现自己的想法，印证自己的思路\u003C\u002Fli\u003E\u003Cli\u003E不时使用一下先前没用过的东西，刷新自己陈旧的三观\u003C\u002Fli\u003E\u003Cli\u003E给C++本专栏打call\u003C\u002Fli\u003E\u003Cli\u003E有点动力，不让自己无聊\u003C\u002Fli\u003E\u003Cli\u003E用Java\u002FC#写容易吧，哈哈，用C++试试，累不死你\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp\u003E\u003Cbr\u003E\u003C\u002Fp\u003E\u003Ch2\u003E编程最核心的意义\u003C\u002Fh2\u003E\u003Cp\u003E\u003Cb\u003E编程是为了印证自己的想法\u002F设计是否正确，不是瞎乱搞\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cb\u003E为什么？编程理论上可以干任何事，我要证明我可以实现我想做的功能。我是为了印证想法而去编程。\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cb\u003E举例子：\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Ca href=\&quot;http:\u002F\u002Flink.zhihu.com\u002F?target=https%3A\u002F\u002Fgithub.com\u002Fbajdcc\u002FjMiniLang\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;\u003Ebajdcc\u002FjMiniLang\u003Ci class=\&quot;icon-external\&quot;\u003E\u003C\u002Fi\u003E\u003C\u002Fa\u003E，印证想法：仅用管道和共享可以实现脚本操作系统\u003C\u002Fli\u003E\u003Cli\u003E\u003Ca href=\&quot;http:\u002F\u002Flink.zhihu.com\u002F?target=https%3A\u002F\u002Fgithub.com\u002Fbajdcc\u002FGameFramework\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;\u003Ebajdcc\u002FGameFramework\u003Ci class=\&quot;icon-external\&quot;\u003E\u003C\u002Fi\u003E\u003C\u002Fa\u003E，印证想法：用lua实现UI逻辑\u003C\u002Fli\u003E\u003Cli\u003E\u003Ca href=\&quot;http:\u002F\u002Flink.zhihu.com\u002F?target=https%3A\u002F\u002Fgithub.com\u002Fbajdcc\u002FjProlog\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;\u003Ebajdcc\u002FjProlog\u003Ci class=\&quot;icon-external\&quot;\u003E\u003C\u002Fi\u003E\u003C\u002Fa\u003E，印证想法：穷举搜索\u003C\u002Fli\u003E\u003Cli\u003E\u003Ca href=\&quot;http:\u002F\u002Flink.zhihu.com\u002F?target=https%3A\u002F\u002Fgithub.com\u002Fbajdcc\u002FSimuCircult\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;\u003Ebajdcc\u002FSimuCircult\u003Ci class=\&quot;icon-external\&quot;\u003E\u003C\u002Fi\u003E\u003C\u002Fa\u003E，印证想法：(1)电路 - 要实现图灵完备的电路需要合理的延迟和更简单的世界观设定，没法实现SR锁存器，证明失败   (2) 闪电模拟 - 证明失败\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003E有了想法，脑子里有了\u003Cb\u003E设计蓝图\u003C\u002Fb\u003E，这下才开始开工写代码，然后de个bug，不断测试\u002F返工，最终把作品做出来，印证先前的想法是正确的。\u003Cb\u003E最实质的是一个设计的过程\u003C\u002Fb\u003E，如果都没有设计，那怎样有写代码的方向呢？\u003C\u002Fp\u003E\u003Cp\u003E设计的过程就是架构的过程，但一开始所以模块就如此详细吗？当然不是。设计蓝图的作用，就是先把关键的\u002F依赖少的部分先实现。然后慢慢添加\u002F丰富功能。\u003C\u002Fp\u003E\u003Cp\u003E举例子：\u003C\u002Fp\u003E\u003Cp\u003E实现四则运算，可以很简单，就100行以内，但功能单一（上学肯定写过这个啦）。\u003C\u002Fp\u003E\u003Cp\u003E然而，本工程实现四则运算，不会那么简单，粗略3k行代码（其中表达式部分1k行，rmb部分2k行）。思路当然是先做lexer再做parser了，但我构思lexer首先要做atoi\u002Fatof吧，因为这是最没依赖的东西。不过本项目中还不算，最底层是RefString流过滤器哈哈。那我就要最先实现流过滤器了，呵呵，又要折腾它了，不过我已经接触\u002F实现过，只要copy下自己代码就ok了。所以要拼积累啊，做同样的东西，做得越多，就做得越快，因为先前的代码会不断积累，先前的思路会不断沉淀，当你有了新的想法\u002F想做新的东西时，那个思路就会蹦出来，然后一拍脑袋，soga！是这样子！不过我转而一想，也许我可以尝试一种新方法……因此就有了这篇文章啦~\u003C\u002Fp\u003E\u003Cp\u003E\u003Cbr\u003E\u003C\u002Fp\u003E\u003Cp\u003E后面的内容就很肥了（正经点，全是C++）：\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E设计模式的使用\u003C\u002Fli\u003E\u003Cli\u003E挺有用的工具类（自己造轮子）\u003C\u002Fli\u003E\u003Cli\u003E不走寻常路实现四则运算\u003C\u002Fli\u003E\u003C\u002Ful\u003E&quot;,&quot;updated&quot;:new Date(&quot;2017-09-24T14:54:49.000Z&quot;),&quot;canComment&quot;:false,&quot;commentPermission&quot;:&quot;anyone&quot;,&quot;commentCount&quot;:9,&quot;collapsedCount&quot;:0,&quot;likeCount&quot;:21,&quot;state&quot;:&quot;published&quot;,&quot;isLiked&quot;:false,&quot;slug&quot;:&quot;29632312&quot;,&quot;isTitleImageFullScreen&quot;:false,&quot;rating&quot;:&quot;none&quot;,&quot;titleImage&quot;:&quot;https:\u002F\u002Fpic1.zhimg.com\u002Fv2-aa4922fba3eb040ecb03d67c2d2b2cc4_r.png&quot;,&quot;links&quot;:{&quot;comments&quot;:&quot;\u002Fapi\u002Fposts\u002F29632312\u002Fcomments&quot;},&quot;reviewers&quot;:[],&quot;topics&quot;:[{&quot;url&quot;:&quot;https:\u002F\u002Fwww.zhihu.com\u002Ftopic\u002F19601705&quot;,&quot;id&quot;:&quot;19601705&quot;,&quot;name&quot;:&quot;C \u002F C++&quot;},{&quot;url&quot;:&quot;https:\u002F\u002Fwww.zhihu.com\u002Ftopic\u002F19599592&quot;,&quot;id&quot;:&quot;19599592&quot;,&quot;name&quot;:&quot;设计模式&quot;},{&quot;url&quot;:&quot;https:\u002F\u002Fwww.zhihu.com\u002Ftopic\u002F19554298&quot;,&quot;id&quot;:&quot;19554298&quot;,&quot;name&quot;:&quot;编程&quot;}],&quot;adminClosedComment&quot;:false,&quot;titleImageSize&quot;:{&quot;width&quot;:677,&quot;height&quot;:666},&quot;href&quot;:&quot;\u002Fapi\u002Fposts\u002F29632312&quot;,&quot;excerptTitle&quot;:&quot;&quot;,&quot;tipjarState&quot;:&quot;inactivated&quot;,&quot;annotationAction&quot;:[],&quot;sourceUrl&quot;:&quot;&quot;,&quot;pageCommentsCount&quot;:9,&quot;hasPublishingDraft&quot;:false,&quot;snapshotUrl&quot;:&quot;&quot;,&quot;publishedTime&quot;:&quot;2017-09-24T22:54:49+08:00&quot;,&quot;url&quot;:&quot;\u002Fp\u002F29632312&quot;,&quot;lastestLikers&quot;:[{&quot;bio&quot;:null,&quot;isFollowing&quot;:false,&quot;hash&quot;:&quot;d0ecb9e769b2e8de1150ceadeace5fb8&quot;,&quot;uid&quot;:542361789929828350,&quot;isOrg&quot;:false,&quot;slug&quot;:&quot;wu-bo-19-31&quot;,&quot;isFollowed&quot;:false,&quot;description&quot;:&quot;&quot;,&quot;name&quot;:&quot;吴波&quot;,&quot;profileUrl&quot;:&quot;https:\u002F\u002Fwww.zhihu.com\u002Fpeople\u002Fwu-bo-19-31&quot;,&quot;avatar&quot;:{&quot;id&quot;:&quot;03b42d62450ffcb05428b958512bea22&quot;,&quot;template&quot;:&quot;https:\u002F\u002Fpic3.zhimg.com\u002F50\u002F{id}_{size}.jpg&quot;},&quot;isOrgWhiteList&quot;:false,&quot;isBanned&quot;:false},{&quot;bio&quot;:&quot;高中党……懒癌晚期，中二病危。&quot;,&quot;isFollowing&quot;:false,&quot;hash&quot;:&quot;4d7d704dfb4d3dbaf186b567e2f76beb&quot;,&quot;uid&quot;:681216477051490300,&quot;isOrg&quot;:false,&quot;slug&quot;:&quot;wlt130&quot;,&quot;isFollowed&quot;:false,&quot;description&quot;:&quot;大爱星尘，，，尘宝宝才是最可爱的&quot;,&quot;name&quot;:&quot;遗迹&quot;,&quot;profileUrl&quot;:&quot;https:\u002F\u002Fwww.zhihu.com\u002Fpeople\u002Fwlt130&quot;,&quot;avatar&quot;:{&quot;id&quot;:&quot;0c75268b648f5ea1f183690b36478016&quot;,&quot;template&quot;:&quot;https:\u002F\u002Fpic3.zhimg.com\u002F50\u002F{id}_{size}.jpg&quot;},&quot;isOrgWhiteList&quot;:false,&quot;isBanned&quot;:false},{&quot;bio&quot;:&quot;博学审问慎思明辨笃行&quot;,&quot;isFollowing&quot;:false,&quot;hash&quot;:&quot;1434b62464f11a2b317bc3b58553dc91&quot;,&quot;uid&quot;:61654796599296,&quot;isOrg&quot;:false,&quot;slug&quot;:&quot;yeu-yang&quot;,&quot;isFollowed&quot;:false,&quot;description&quot;:&quot;&quot;,&quot;name&quot;:&quot;yeu yang&quot;,&quot;profileUrl&quot;:&quot;https:\u002F\u002Fwww.zhihu.com\u002Fpeople\u002Fyeu-yang&quot;,&quot;avatar&quot;:{&quot;id&quot;:&quot;da8e974dc&quot;,&quot;template&quot;:&quot;https:\u002F\u002Fpic1.zhimg.com\u002F{id}_{size}.jpg&quot;},&quot;isOrgWhiteList&quot;:false,&quot;isBanned&quot;:false},{&quot;bio&quot;:&quot;Code for food&quot;,&quot;isFollowing&quot;:false,&quot;hash&quot;:&quot;e0d1e2da311563ee3b775efe6438b6a8&quot;,&quot;uid&quot;:28304870473728,&quot;isOrg&quot;:false,&quot;slug&quot;:&quot;Muxter&quot;,&quot;isFollowed&quot;:false,&quot;description&quot;:&quot;&quot;,&quot;name&quot;:&quot;Muxter&quot;,&quot;profileUrl&quot;:&quot;https:\u002F\u002Fwww.zhihu.com\u002Fpeople\u002FMuxter&quot;,&quot;avatar&quot;:{&quot;id&quot;:&quot;v2-8c165ad6d006fa028c5ab4e244e232d7&quot;,&quot;template&quot;:&quot;https:\u002F\u002Fpic4.zhimg.com\u002F50\u002F{id}_{size}.jpg&quot;},&quot;isOrgWhiteList&quot;:false,&quot;isBanned&quot;:false},{&quot;bio&quot;:&quot;可能是学生，可能是信息竞赛，可能是化学竞赛&quot;,&quot;isFollowing&quot;:false,&quot;hash&quot;:&quot;d019c14dd20ad8e447e52a9713a8c6ac&quot;,&quot;uid&quot;:864512170321383400,&quot;isOrg&quot;:false,&quot;slug&quot;:&quot;dorence&quot;,&quot;isFollowed&quot;:false,&quot;description&quot;:&quot;&quot;,&quot;name&quot;:&quot;dorence&quot;,&quot;profileUrl&quot;:&quot;https:\u002F\u002Fwww.zhihu.com\u002Fpeople\u002Fdorence&quot;,&quot;avatar&quot;:{&quot;id&quot;:&quot;da8e974dc&quot;,&quot;template&quot;:&quot;https:\u002F\u002Fpic1.zhimg.com\u002F{id}_{size}.jpg&quot;},&quot;isOrgWhiteList&quot;:false,&quot;isBanned&quot;:false}],&quot;summary&quot;:&quot;\u003Cb\u003E更新：可以用dev-cpp编译了（注意选-std=c++11），精简了代码，总的来说只有一千行左右吧，\u003Ca href=\&quot;https:\u002F\u002Fgithub.com\u002Fbajdcc\u002Flearnstl\u002Ftree\u002Fmaster\u002Fprojects\u002Fcalc\&quot;\u003Ebajdcc\u002Flearnstl\u003C\u002Fa\u003E。\u003C\u002Fb\u003E================================花了几天鼓捣&amp;amp;debug，终于大功告成。源码：\u003Ca href=\&quot;https:\u002F\u002Fgithub.com\u002Fbajdcc\u002FCEval\&quot;\u003Ebajdcc\u002FCEval\u003C\u002Fa\u003E，见里面的CEval.cpp。工程源码阅读基础：表达式求值部…&quot;,&quot;reviewingCommentsCount&quot;:0,&quot;meta&quot;:{&quot;previous&quot;:null,&quot;next&quot;:null},&quot;annotationDetail&quot;:null,&quot;commentsCount&quot;:9,&quot;likesCount&quot;:21,&quot;FULLINFO&quot;:true}},&quot;User&quot;:{&quot;bajdcc&quot;:{&quot;isFollowed&quot;:false,&quot;name&quot;:&quot;陈安&quot;,&quot;headline&quot;:&quot;专业研究野生技术 https:\u002F\u002Fgithub.com\u002Fbajdcc&quot;,&quot;avatarUrl&quot;:&quot;https:\u002F\u002Fpic4.zhimg.com\u002F50\u002Fv2-cd6d61ad9ef94c41b9e77f8e0f727893_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;slug&quot;:&quot;bajdcc&quot;,&quot;bio&quot;:&quot;专业研究野生技术&quot;,&quot;hash&quot;:&quot;7a228f3d98a5d011f952110c10dc4976&quot;,&quot;uid&quot;:71809588264960,&quot;isOrg&quot;:false,&quot;description&quot;:&quot;专业研究野生技术 https:\u002F\u002Fgithub.com\u002Fbajdcc&quot;,&quot;badge&quot;:{&quot;identity&quot;:null,&quot;bestAnswerer&quot;:null},&quot;profileUrl&quot;:&quot;https:\u002F\u002Fwww.zhihu.com\u002Fpeople\u002Fbajdcc&quot;,&quot;avatar&quot;:{&quot;id&quot;:&quot;v2-cd6d61ad9ef94c41b9e77f8e0f727893&quot;,&quot;template&quot;:&quot;https:\u002F\u002Fpic4.zhimg.com\u002F50\u002F{id}_{size}.jpg&quot;},&quot;isOrgWhiteList&quot;:false,&quot;isBanned&quot;:false}},&quot;Comment&quot;:{},&quot;favlists&quot;:{}},&quot;me&quot;:{},&quot;global&quot;:{&quot;experimentFeatures&quot;:{&quot;ge3&quot;:&quot;ge3_9&quot;,&quot;ge2&quot;:&quot;ge2_1&quot;,&quot;nwebStickySidebar&quot;:&quot;sticky&quot;,&quot;androidPassThroughPush&quot;:&quot;all&quot;,&quot;newMore&quot;:&quot;new&quot;,&quot;nwebFeedAd&quot;:&quot;experiment&quot;,&quot;newSign&quot;:&quot;newVersion&quot;,&quot;liveReviewBuyBar&quot;:&quot;live_review_buy_bar_2&quot;,&quot;qawebRelatedReadingsContentControl&quot;:&quot;open&quot;,&quot;liveStore&quot;:&quot;ls_a2_b2_c1_f2&quot;,&quot;qawebThumbnailAbtest&quot;:&quot;new&quot;,&quot;searchHybridTabs&quot;:&quot;without-tabs&quot;,&quot;enableVoteDownReasonMenu&quot;:&quot;disable&quot;,&quot;iOSEnableFeedModuleWWANAritclePreRender&quot;:&quot;iOS_FeedModule_WWAN_PreRender_Enable&quot;,&quot;isOffice&quot;:&quot;false&quot;,&quot;enableTtsPlay&quot;:&quot;false&quot;,&quot;liveDetailWechatBanner&quot;:&quot;Live_detail_wechat_banner_1&quot;,&quot;wechatShareModal&quot;:&quot;wechat_share_modal_show&quot;,&quot;newLiveFeedMediacard&quot;:&quot;old&quot;,&quot;homeUi2&quot;:&quot;default&quot;,&quot;showVideoUploadAttention&quot;:&quot;true&quot;,&quot;recommendationAbtest&quot;:&quot;new&quot;,&quot;marketTab&quot;:&quot;market_tab_old&quot;,&quot;qrcodeLogin&quot;:&quot;qrcode&quot;,&quot;isShowUnicomFreeEntry&quot;:&quot;unicom_free_entry_off&quot;,&quot;newMobileColumnAppheader&quot;:&quot;new_header&quot;,&quot;androidDbCommentWithRepinRecord&quot;:&quot;open&quot;,&quot;androidDbRecommendAction&quot;:&quot;open&quot;,&quot;zcmLighting&quot;:&quot;zcm&quot;,&quot;favAct&quot;:&quot;default&quot;,&quot;appStoreRateDialog&quot;:&quot;close&quot;,&quot;mobileQaPageProxyHeifetz&quot;:&quot;m_qa_page_nweb&quot;,&quot;newAppViewRelatedAd&quot;:&quot;yes&quot;,&quot;default&quot;:&quot;None&quot;,&quot;isNewNotiPanel&quot;:&quot;yes&quot;,&quot;androidDbRepinSelection&quot;:&quot;open&quot;,&quot;nwebRelatedAdvert&quot;:&quot;default&quot;,&quot;qaStickySidebar&quot;:&quot;sticky_sidebar&quot;,&quot;androidProfilePanel&quot;:&quot;panel_b&quot;,&quot;nwebWriteAnswer&quot;:&quot;experiment&quot;}},&quot;columns&quot;:{&quot;next&quot;:{}},&quot;columnPosts&quot;:{},&quot;columnSettings&quot;:{&quot;colomnAuthor&quot;:[],&quot;uploadAvatarDetails&quot;:&quot;&quot;,&quot;contributeRequests&quot;:[],&quot;contributeRequestsTotalCount&quot;:0,&quot;inviteAuthor&quot;:&quot;&quot;},&quot;postComments&quot;:{},&quot;postReviewComments&quot;:{&quot;comments&quot;:[],&quot;newComments&quot;:[],&quot;hasMore&quot;:true},&quot;favlistsByUser&quot;:{},&quot;favlistRelations&quot;:{},&quot;promotions&quot;:{},&quot;switches&quot;:{&quot;couldSetPoster&quot;:false},&quot;draft&quot;:{&quot;titleImage&quot;:&quot;&quot;,&quot;titleImageSize&quot;:{},&quot;isTitleImageFullScreen&quot;:false,&quot;canTitleImageFullScreen&quot;:false,&quot;title&quot;:&quot;&quot;,&quot;titleImageUploading&quot;:false,&quot;error&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;draftLoading&quot;:false,&quot;globalLoading&quot;:false,&quot;pendingVideo&quot;:{&quot;resource&quot;:null,&quot;error&quot;:null}},&quot;drafts&quot;:{&quot;draftsList&quot;:[],&quot;next&quot;:{}},&quot;config&quot;:{&quot;userNotBindPhoneTipString&quot;:{}},&quot;recommendPosts&quot;:{&quot;articleRecommendations&quot;:[],&quot;columnRecommendations&quot;:[]},&quot;env&quot;:{&quot;edition&quot;:{&quot;baidu&quot;:false,&quot;yidianzixun&quot;:false,&quot;qqnews&quot;:false},&quot;isAppView&quot;:false,&quot;appViewConfig&quot;:{&quot;content_padding_top&quot;:128,&quot;content_padding_bottom&quot;:56,&quot;content_padding_left&quot;:16,&quot;content_padding_right&quot;:16,&quot;title_font_size&quot;:22,&quot;body_font_size&quot;:16,&quot;is_dark_theme&quot;:false,&quot;can_auto_load_image&quot;:true,&quot;app_info&quot;:&quot;OS=iOS&quot;},&quot;isApp&quot;:false,&quot;userAgent&quot;:{&quot;ua&quot;:&quot;Wget\u002F1.19.1 (cygwin)&quot;,&quot;browser&quot;:{},&quot;engine&quot;:{},&quot;os&quot;:{},&quot;device&quot;:{},&quot;cpu&quot;:{}}},&quot;message&quot;:{&quot;newCount&quot;:0},&quot;pushNotification&quot;:{&quot;newCount&quot;:0}}</textarea><script src="//static.zhihu.com/hemingway/common.95b19b48d0d6b20aae46.js"></script><script src="//static.zhihu.com/hemingway/app.40eeaeeef4c006d528d0.js"></script><script src="//static.zhihu.com/hemingway/raven.bdd8772ab8ba1205b8ea.js" async="" defer=""></script></body></html>