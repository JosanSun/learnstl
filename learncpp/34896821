<!doctype html>
<html lang="zh" data-hairline="true" data-theme="light"><head><meta charSet="utf-8"/><title data-react-helmet="true">【jMiniLang】尾递归优化</title><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1"/><meta name="renderer" content="webkit"/><meta name="force-rendering" content="webkit"/><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/><meta name="google-site-verification" content="FTeR0c8arOPKh8c5DYh_9uu98_zJbaWw53J-Sch9MTg"/><meta data-react-helmet="true" property="description" content="克服了自己的懒惰，给我们的jMiniLang增加了一些语法糖，也让它支持了异常的特性。语法糖这东西，懒得不写也可以，只是会让代码变得非常臃肿和丑陋，经过一番努力，目前jMiniLang的语法糖也不少，代码看起来十分飘…"/><meta data-react-helmet="true" property="og:title" content="【jMiniLang】尾递归优化"/><meta data-react-helmet="true" property="og:url" content="http://zhuanlan.zhihu.com/p/34896821"/><meta data-react-helmet="true" property="og:description" content="克服了自己的懒惰，给我们的jMiniLang增加了一些语法糖，也让它支持了异常的特性。语法糖这东西，懒得不写也可以，只是会让代码变得非常臃肿和丑陋，经过一番努力，目前jMiniLang的语法糖也不少，代码看起来十分飘…"/><meta data-react-helmet="true" property="og:image" content="https://pic2.zhimg.com/v2-5e699d912340c4fb8deb66ce79624074_r.jpg"/><meta data-react-helmet="true" property="og:type" content="article"/><meta data-react-helmet="true" property="og:site_name" content="知乎专栏"/><link rel="shortcut icon" type="image/x-icon" href="https://static.zhihu.com/static/favicon.ico"/><link rel="dns-prefetch" href="//static.zhimg.com"/><link rel="dns-prefetch" href="//pic1.zhimg.com"/><link rel="dns-prefetch" href="//pic2.zhimg.com"/><link rel="dns-prefetch" href="//pic3.zhimg.com"/><link rel="dns-prefetch" href="//pic4.zhimg.com"/><link href="https://static.zhihu.com/heifetz/column.app.2c8c6fe8d19ec5947e2a.css" rel="stylesheet"/></head><body class=""><div id="root"><div class="App" data-reactroot=""><div class="LoadingBar"></div><main role="main" class="App-main"><div class="Post-content" data-zop-usertoken="{&quot;userToken&quot;:&quot;&quot;}" data-zop="{&quot;authorName&quot;:&quot;陈安&quot;,&quot;itemId&quot;:34896821,&quot;title&quot;:&quot;【jMiniLang】尾递归优化&quot;,&quot;type&quot;:&quot;article&quot;}"><div class="ColumnPageHeader-Wrapper"><div><div class="Sticky ColumnPageHeader"><div class="ColumnPageHeader-content"><a href="//www.zhihu.com" aria-label="知乎"><svg viewBox="0 0 200 91" class="Icon ZhihuLogo Icon--logo" style="height:30px;width:64px" width="64" height="30" aria-hidden="true"><title></title><g><path d="M53.29 80.035l7.32.002 2.41 8.24 13.128-8.24h15.477v-67.98H53.29v67.978zm7.79-60.598h22.756v53.22h-8.73l-8.718 5.473-1.587-5.46-3.72-.012v-53.22zM46.818 43.162h-16.35c.545-8.467.687-16.12.687-22.955h15.987s.615-7.05-2.68-6.97H16.807c1.09-4.1 2.46-8.332 4.1-12.708 0 0-7.523 0-10.085 6.74-1.06 2.78-4.128 13.48-9.592 24.41 1.84-.2 7.927-.37 11.512-6.94.66-1.84.785-2.08 1.605-4.54h9.02c0 3.28-.374 20.9-.526 22.95H6.51c-3.67 0-4.863 7.38-4.863 7.38H22.14C20.765 66.11 13.385 79.24 0 89.62c6.403 1.828 12.784-.29 15.937-3.094 0 0 7.182-6.53 11.12-21.64L43.92 85.18s2.473-8.402-.388-12.496c-2.37-2.788-8.768-10.33-11.496-13.064l-4.57 3.627c1.363-4.368 2.183-8.61 2.46-12.71H49.19s-.027-7.38-2.372-7.38zm128.752-.502c6.51-8.013 14.054-18.302 14.054-18.302s-5.827-4.625-8.556-1.27c-1.874 2.548-11.51 15.063-11.51 15.063l6.012 4.51zm-46.903-18.462c-2.814-2.577-8.096.667-8.096.667s12.35 17.2 12.85 17.953l6.08-4.29s-8.02-11.752-10.83-14.33zM199.99 46.5c-6.18 0-40.908.292-40.953.292v-31.56c1.503 0 3.882-.124 7.14-.376 12.773-.753 21.914-1.25 27.427-1.504 0 0 3.817-8.496-.185-10.45-.96-.37-7.24 1.43-7.24 1.43s-51.63 5.153-72.61 5.64c.5 2.756 2.38 5.336 4.93 6.11 4.16 1.087 7.09.53 15.36.277 7.76-.5 13.65-.76 17.66-.76v31.19h-41.71s.88 6.97 7.97 7.14h33.73v22.16c0 4.364-3.498 6.87-7.65 6.6-4.4.034-8.15-.36-13.027-.566.623 1.24 1.977 4.496 6.035 6.824 3.087 1.502 5.054 2.053 8.13 2.053 9.237 0 14.27-5.4 14.027-14.16V53.93h38.235c3.026 0 2.72-7.432 2.72-7.432z" fill-rule="evenodd"/></g></svg></a><i class="ColumnPageHeader-Line"></i><div class="ColumnPageHeader-Title"><a class="ColumnLink ColumnPageHeader-Link" href="//zhuanlan.zhihu.com/learncpp"><img class="Avatar Avatar--round" width="30" height="30" src="https://pic1.zhimg.com/v2-bf63794c542fc73b11e17014b7e0d01d_is.jpg" srcSet="https://pic1.zhimg.com/v2-bf63794c542fc73b11e17014b7e0d01d_im.jpg 2x" alt="学习C++"/></a><div class="ColumnPageHeader-TitleName"><span class="ColumnPageHeader-TitleMeta">首发于</span><a class="ColumnLink ColumnPageHeader-TitleColumn" href="//zhuanlan.zhihu.com/learncpp">学习C++</a></div></div><div class="ColumnPageHeader-Button"><button class="Button ColumnPageHeader-WriteButton Button--blue" type="button"><svg class="Zi Zi--EditSurround" fill="currentColor" viewBox="0 0 24 24" width="24" height="24"><path d="M18.453 7.992l-1.833-1.65.964-.978a1.223 1.223 0 0 1 1.73-.012l.005.006a1.24 1.24 0 0 1 .007 1.748l-.873.886zm-1.178 1.194l-5.578 5.66-1.935.697a.393.393 0 0 1-.504-.504l.697-1.935 5.488-5.567 1.832 1.65zM7.58 5.848l5.654.006-1.539 1.991-3.666.012A1.02 1.02 0 0 0 7 8.868v7.993c0 .558.46 1.01 1.029 1.01l7.941-.01c.568 0 1.03-.453 1.03-1.012v-4.061l2-1.442v6.002c0 1.397-1.2 2.501-2.62 2.501H7.574C6.153 19.85 5 18.717 5 17.32V8.35c0-1.397 1.16-2.502 2.58-2.502z"></path></svg>写文章</button></div></div></div></div></div><img class="TitleImage" src="https://pic2.zhimg.com/v2-5e699d912340c4fb8deb66ce79624074_1200x500.jpg" alt="【jMiniLang】尾递归优化"/><article class="Post-Main Post-NormalMain"><header class="Post-Header"><h1 class="Post-Title">【jMiniLang】尾递归优化</h1><div class="Post-Author"><div class="AuthorInfo" itemProp="author" itemscope="" itemType="http://schema.org/Person"><meta itemProp="name" content="陈安"/><meta itemProp="image" content="https://pic1.zhimg.com/v2-cd6d61ad9ef94c41b9e77f8e0f727893_is.jpg"/><meta itemProp="url" content="https://www.zhihu.com/people/bajdcc"/><meta itemProp="zhihu:followerCount"/><span class="UserLink AuthorInfo-avatarWrapper"><div class="Popover"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="//www.zhihu.com/people/bajdcc"><img class="Avatar Avatar--round AuthorInfo-avatar" width="38" height="38" src="https://pic1.zhimg.com/v2-cd6d61ad9ef94c41b9e77f8e0f727893_xs.jpg" srcSet="https://pic1.zhimg.com/v2-cd6d61ad9ef94c41b9e77f8e0f727893_l.jpg 2x" alt="陈安"/></a></div></div></span><div class="AuthorInfo-content"><div class="AuthorInfo-head"><span class="UserLink AuthorInfo-name"><div class="Popover"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="//www.zhihu.com/people/bajdcc">陈安</a></div></div></span></div><div class="AuthorInfo-detail"><div class="AuthorInfo-badge"><div class="RichText AuthorInfo-badgeText">专业研究野生技术</div></div></div></div></div></div><div><span class="Voters"><button class="Button Button--plain" type="button">8 人赞了该文章</button></span></div></header><div><div class="RichText Post-RichText"><p>克服了自己的懒惰，给我们的jMiniLang增加了一些语法糖，也让它支持了异常的特性。语法糖这东西，懒得不写也可以，只是会让代码变得非常臃肿和丑陋，经过一番努力，目前jMiniLang的语法糖也不少，代码看起来十分飘逸了～</p><p>起初看到一篇文章讲用魔法实现Python的尾递归优化<a href="https://link.zhihu.com/?target=https%3A//www.jianshu.com/p/376e433214b3" class=" wrap external" target="_blank" rel="nofollow noreferrer">Python开启尾递归优化!</a>，当然，try会影响效率，好在我们jMiniLang本身的效率也不咋地，所以可以尝尝鲜。搞一门语言，尝试那些花哨的东西也不失为一些乐趣。</p><p><br></p><h2>Py魔法实现尾递归优化</h2><div class="highlight"><pre><code class="language-python"><span></span><span class="ch">#!/usr/bin/env python2.4</span>
<span class="c1"># This program shows off a python decorator(</span>
<span class="c1"># which implements tail call optimization. It</span>
<span class="c1"># does this by throwing an exception if it is</span>
<span class="c1"># it's own grandparent, and catching such</span>
<span class="c1"># exceptions to recall the stack.</span>
 
<span class="kn">import</span> <span class="nn">sys</span>
 
<span class="k">class</span> <span class="nc">TailRecurseException</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">args</span><span class="p">,</span> <span class="n">kwargs</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">args</span> <span class="o">=</span> <span class="n">args</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">kwargs</span> <span class="o">=</span> <span class="n">kwargs</span>
 
<span class="k">def</span> <span class="nf">tail_call_optimized</span><span class="p">(</span><span class="n">g</span><span class="p">):</span>
    <span class="sd">"""</span>
<span class="sd">    This function decorates a function with tail call</span>
<span class="sd">    optimization. It does this by throwing an exception</span>
<span class="sd">    if it is it's own grandparent, and catching such</span>
<span class="sd">    exceptions to fake the tail call optimization.</span>
<span class="sd"> </span>
<span class="sd">    This function fails if the decorated</span>
<span class="sd">    function recurses in a non-tail context.</span>
<span class="sd">    """</span>
    <span class="k">def</span> <span class="nf">func</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
        <span class="n">f</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">_getframe</span><span class="p">()</span>
        <span class="k">if</span> <span class="n">f</span><span class="o">.</span><span class="n">f_back</span> <span class="ow">and</span> <span class="n">f</span><span class="o">.</span><span class="n">f_back</span><span class="o">.</span><span class="n">f_back</span> \
            <span class="ow">and</span> <span class="n">f</span><span class="o">.</span><span class="n">f_back</span><span class="o">.</span><span class="n">f_back</span><span class="o">.</span><span class="n">f_code</span> <span class="o">==</span> <span class="n">f</span><span class="o">.</span><span class="n">f_code</span><span class="p">:</span>
            <span class="k">raise</span> <span class="n">TailRecurseException</span><span class="p">(</span><span class="n">args</span><span class="p">,</span> <span class="n">kwargs</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">while</span> <span class="mi">1</span><span class="p">:</span>
                <span class="k">try</span><span class="p">:</span>
                    <span class="k">return</span> <span class="n">g</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
                <span class="k">except</span> <span class="n">TailRecurseException</span><span class="p">,</span> <span class="n">e</span><span class="p">:</span>
                    <span class="n">args</span> <span class="o">=</span> <span class="n">e</span><span class="o">.</span><span class="n">args</span>
                    <span class="n">kwargs</span> <span class="o">=</span> <span class="n">e</span><span class="o">.</span><span class="n">kwargs</span>
    <span class="n">func</span><span class="o">.</span><span class="n">__doc__</span> <span class="o">=</span> <span class="n">g</span><span class="o">.</span><span class="n">__doc__</span>
    <span class="k">return</span> <span class="n">func</span>
 
<span class="nd">@tail_call_optimized</span>
<span class="k">def</span> <span class="nf">factorial</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">acc</span><span class="o">=</span><span class="mi">1</span><span class="p">):</span>
    <span class="s2">"calculate a factorial"</span>
    <span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">acc</span>
    <span class="k">return</span> <span class="n">factorial</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">n</span><span class="o">*</span><span class="n">acc</span><span class="p">)</span>
 
<span class="k">print</span> <span class="n">factorial</span><span class="p">(</span><span class="mi">10000</span><span class="p">)</span>
</code></pre></div><p>当然这个代码是国外某大神写出来的，各样魔幻，然而即使我能看懂py语言，还是觉得这种写法大写地尴尬。</p><p><br></p><h2>jMiniLang魔法实现尾递归优化</h2><p>来看看题图中的jMiniLang实现的核心代码：</p><div class="highlight"><pre><code class="language-js"><span></span><span class="kd">var</span> <span class="nx">g_tail_opt</span> <span class="o">=</span> <span class="nx">func</span> <span class="p">[</span><span class="s2">"尾递归优化"</span><span class="p">]</span> <span class="o">~</span><span class="p">(</span><span class="nx">fun</span><span class="p">,</span> <span class="nx">args</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="nx">lambda</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span> <span class="p">{</span> <span class="k">throw</span> <span class="nx">a</span><span class="p">;</span> <span class="p">};</span>
    <span class="kd">var</span> <span class="nx">fact</span> <span class="o">=</span> <span class="nx">fun</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span>
    <span class="k">for</span> <span class="p">(;;)</span> <span class="p">{</span>
        <span class="k">try</span> <span class="p">{</span>
            <span class="k">return</span> <span class="nx">g_call_apply</span><span class="p">(</span><span class="nx">fact</span><span class="p">,</span> <span class="nx">args</span><span class="p">);</span>
        <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">args</span> <span class="o">:=</span> <span class="nx">e</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="c1">// 使用</span>
<span class="nx">g_printn</span><span class="p">(</span><span class="s2">"Factorial(10) = "</span> <span class="o">+</span> <span class="nx">g_tail_opt</span><span class="p">(</span>
    <span class="nx">lambda</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nx">lambda</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span> <span class="nx">total</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nx">n</span> <span class="o">&lt;=</span> <span class="mi">1</span> <span class="o">?</span> <span class="nx">total</span> <span class="o">:</span> <span class="nx">f</span><span class="p">([</span><span class="nx">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">total</span> <span class="o">*</span> <span class="nx">n</span><span class="p">]),</span>
    <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">1</span><span class="p">]));</span> <span class="c1">// 3628800</span>
</code></pre></div><p>哈哈，十分美观，十分满足。</p><p>call_apply参见javascript中的语法，代码实现在题图中。</p><p><br></p><h2>对代码的分析</h2><p>先来看看调用方式，参数是</p><div class="highlight"><pre><code class="language-text"><span></span>lambda(f) -&gt; lambda(n, total) -&gt; n &lt;= 1 ? total : f([n - 1, total * n])
</code></pre></div><p>f就是库传进去的，f的作用就是将它的参数throw出来～</p><p>看看调用过程(假设调用fact(10))：</p><ol><li>fact = lambda(n, total) -&gt; n &lt;= 1 ? total : throw [n-1, total*n]</li><li>--&gt; for(;;) 进入循环，此时args = [10, 1]</li><li>return apply(fact, [10,1])</li><li>进入 =&gt; return fact(10, 1)</li><li>进入 =&gt; return f(9, 10)</li><li>进入 =&gt; throw [9, 10]</li><li>捕获异常 catch(e)   -&gt;  令 args = e = [9, 10]</li><li>--&gt; for(;;) 重新一轮循环 此时args = [9, 10]</li></ol><p>这里的精髓就是：一般的递归调用会增加栈，解决方法就是将递归调用替换成throw，导致即将要增加栈时，偏偏不，反而销毁一切中间过程中要用的栈，回到最起始的地方，即是for循环，在循环中，捕获throw过来的参数，替换掉原来的args。</p><p><br></p><p>为何try机制可以这样实现尾递归优化呢？因为貌似只有try才有销毁掉调用栈的功能(在jMiniLang语法设计中是这样的)。先前的yield协程机制的实现只是假装替换了下栈，并没有销毁的功能。</p><p><br></p><h2>后续计划</h2><p>行为树的实现。</p></div></div><div class="ContentItem-time"><a target="_blank" href="http://zhuanlan.zhihu.com/p/34896821"><span data-tooltip="发布于 2018-03-24 15:24">编辑于 2018-03-24</span></a></div><div class="Post-topicsAndReviewer"><div class="TopicList Post-Topics"><div class="Tag Topic"><span class="Tag-content"><a class="TopicLink" href="//www.zhihu.com/topic/19561132" target="_blank"><div class="Popover"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content">Java</div></div></a></span></div><div class="Tag Topic"><span class="Tag-content"><a class="TopicLink" href="//www.zhihu.com/topic/20037387" target="_blank"><div class="Popover"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content">尾递归</div></div></a></span></div><div class="Tag Topic"><span class="Tag-content"><a class="TopicLink" href="//www.zhihu.com/topic/19554298" target="_blank"><div class="Popover"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content">编程</div></div></a></span></div></div></div><div><div class="Sticky RichContent-actions is-bottom"><div class="ContentItem-actions"><button class="Button LikeButton ContentItem-action" type="button"><svg viewBox="0 0 20 18" xmlns="http://www.w3.org/2000/svg" class="Icon Icon--like" style="height:16px;width:13px" width="13" height="16" aria-hidden="true"><title></title><g><path d="M.718 7.024c-.718 0-.718.63-.718.63l.996 9.693c0 .703.718.65.718.65h1.45c.916 0 .847-.65.847-.65V7.793c-.09-.88-.853-.79-.846-.79l-2.446.02zm11.727-.05S13.2 5.396 13.6 2.89C13.765.03 11.55-.6 10.565.53c-1.014 1.232 0 2.056-4.45 5.83C5.336 6.965 5 8.01 5 8.997v6.998c-.016 1.104.49 2 1.99 2h7.586c2.097 0 2.86-1.416 2.86-1.416s2.178-5.402 2.346-5.91c1.047-3.516-1.95-3.704-1.95-3.704l-5.387.007z"/></g></svg>8</button><button class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel" type="button"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Comment Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M10.241 19.313a.97.97 0 0 0-.77.2 7.908 7.908 0 0 1-3.772 1.482.409.409 0 0 1-.38-.637 5.825 5.825 0 0 0 1.11-2.237.605.605 0 0 0-.227-.59A7.935 7.935 0 0 1 3 11.25C3 6.7 7.03 3 12 3s9 3.7 9 8.25-4.373 9.108-10.759 8.063z" fill-rule="evenodd"></path></svg></span>2 条评论</button><div class="Popover ShareMenu ContentItem-action"><div class="" id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content"><button class="Button Button--plain Button--withIcon Button--withLabel" type="button"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Share Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M2.931 7.89c-1.067.24-1.275 1.669-.318 2.207l5.277 2.908 8.168-4.776c.25-.127.477.198.273.39L9.05 14.66l.927 5.953c.18 1.084 1.593 1.376 2.182.456l9.644-15.242c.584-.892-.212-2.029-1.234-1.796L2.93 7.89z" fill-rule="evenodd"></path></svg></span>分享</button></div></div><button class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel" type="button"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Star Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M5.515 19.64l.918-5.355-3.89-3.792c-.926-.902-.639-1.784.64-1.97L8.56 7.74l2.404-4.871c.572-1.16 1.5-1.16 2.072 0L15.44 7.74l5.377.782c1.28.186 1.566 1.068.64 1.97l-3.89 3.793.918 5.354c.219 1.274-.532 1.82-1.676 1.218L12 18.33l-4.808 2.528c-1.145.602-1.896.056-1.677-1.218z" fill-rule="evenodd"></path></svg></span>收藏</button><div class="Post-ActionMenuButton"><div class="Popover"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content"><button class="Button Button--plain Button--withIcon Button--iconOnly" type="button"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Dots Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M5 14a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm7 0a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm7 0a2 2 0 1 1 0-4 2 2 0 0 1 0 4z" fill-rule="evenodd"></path></svg></span></button></div></div></div></div></div></div><div class="PostIndex-Contributes"><h3 class="BlockTitle">文章被以下专栏收录</h3><ul><div class="ContentItem Column-ColumnItem"><div class="ContentItem-main"><div class="ContentItem-image"><a class="ColumnLink" href="//zhuanlan.zhihu.com/learncpp"><div class="Popover"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content"><img class="Avatar Avatar--medium Avatar--round" width="40" height="40" src="https://pic1.zhimg.com/v2-bf63794c542fc73b11e17014b7e0d01d_xs.jpg" srcSet="https://pic1.zhimg.com/v2-bf63794c542fc73b11e17014b7e0d01d_l.jpg 2x" alt="学习C++"/></div></div></a></div><div class="ContentItem-head"><h2 class="ContentItem-title"><a class="ColumnLink ColumnItem-Title" href="//zhuanlan.zhihu.com/learncpp"><div class="Popover"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content">学习C++</div></div></a></h2><div class="ContentItem-meta">主要研究操作系统、编译原理、图形学，以及其他有趣的东西</div></div><div class="ContentItem-extra"><a class="Button" href="//zhuanlan.zhihu.com/learncpp" type="button">进入专栏</a></div></div></div></ul></div></article></div></main></div></div><div id="data" style="display:none" data-state="{&quot;privacy&quot;:{&quot;showPrivacy&quot;:false},&quot;loading&quot;:{&quot;global&quot;:{&quot;count&quot;:0},&quot;local&quot;:{&quot;token/&quot;:false,&quot;env/getExperiments/&quot;:false,&quot;env/getIpinfo/&quot;:false,&quot;article/get/&quot;:false}},&quot;entities&quot;:{&quot;users&quot;:{&quot;bajdcc&quot;:{&quot;isFollowed&quot;:false,&quot;avatarUrlTemplate&quot;:&quot;https://pic1.zhimg.com/v2-cd6d61ad9ef94c41b9e77f8e0f727893_{size}.jpg&quot;,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;陈安&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/people/7a228f3d98a5d011f952110c10dc4976&quot;,&quot;gender&quot;:1,&quot;userType&quot;:&quot;people&quot;,&quot;urlToken&quot;:&quot;bajdcc&quot;,&quot;isAdvertiser&quot;:false,&quot;avatarUrl&quot;:&quot;https://pic1.zhimg.com/v2-cd6d61ad9ef94c41b9e77f8e0f727893_is.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;headline&quot;:&quot;专业研究野生技术&quot;,&quot;badge&quot;:[],&quot;id&quot;:&quot;7a228f3d98a5d011f952110c10dc4976&quot;}},&quot;questions&quot;:{},&quot;answers&quot;:{},&quot;articles&quot;:{&quot;34896821&quot;:{&quot;reviewers&quot;:[],&quot;topics&quot;:[{&quot;introduction&quot;:&quot;Java 是一门编程语言，拥有跨平台、面向对象、泛型编程等特性。 &quot;,&quot;avatarUrl&quot;:&quot;https://pic2.zhimg.com/7d343fb2f_is.jpg&quot;,&quot;name&quot;:&quot;Java&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/topics/19561132&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;Java 是一门编程语言，拥有跨平台、面向对象、泛型编程等特性。 &quot;,&quot;id&quot;:&quot;19561132&quot;},{&quot;introduction&quot;:&quot;&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/e82bab09c_is.jpg&quot;,&quot;name&quot;:&quot;尾递归&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/topics/20037387&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;&quot;,&quot;id&quot;:&quot;20037387&quot;},{&quot;introduction&quot;:&quot;人们为了让计算机解决各种棘手的问题，使用编程语言&lt;b&gt;编写程序代码&lt;/b&gt;并通过计算机运算得到最终结果的过程。&quot;,&quot;avatarUrl&quot;:&quot;https://pic1.zhimg.com/v2-4030982b9aed71d12b350a4c3ba5078d_is.jpg&quot;,&quot;name&quot;:&quot;编程&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/topics/19554298&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;人们为了让计算机解决各种棘手的问题，使用编程语言编写程序代码并通过计算机运算得到最终结果的过程。&quot;,&quot;id&quot;:&quot;19554298&quot;}],&quot;excerpt&quot;:&quot;克服了自己的懒惰，给我们的jMiniLang增加了一些语法糖，也让它支持了异常的特性。语法糖这东西，懒得不写也可以，只是会让代码变得非常臃肿和丑陋，经过一番努力，目前jMiniLang的语法糖也不少，代码看起来十分飘逸了～起初看到一篇文章讲用魔法实现Python…&quot;,&quot;adminClosedComment&quot;:false,&quot;canTip&quot;:false,&quot;contributions&quot;:[{&quot;column&quot;:{&quot;acceptSubmission&quot;:true,&quot;description&quot;:&quot;主要研究操作系统、编译原理、图形学，以及其他有趣的东西&quot;,&quot;author&quot;:{&quot;avatarUrlTemplate&quot;:&quot;https://pic1.zhimg.com/v2-cd6d61ad9ef94c41b9e77f8e0f727893_{size}.jpg&quot;,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;陈安&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/people/7a228f3d98a5d011f952110c10dc4976&quot;,&quot;gender&quot;:1,&quot;userType&quot;:&quot;people&quot;,&quot;urlToken&quot;:&quot;bajdcc&quot;,&quot;isAdvertiser&quot;:false,&quot;avatarUrl&quot;:&quot;https://pic1.zhimg.com/v2-cd6d61ad9ef94c41b9e77f8e0f727893_is.jpg&quot;,&quot;isOrg&quot;:false,&quot;headline&quot;:&quot;专业研究野生技术&quot;,&quot;badge&quot;:[],&quot;id&quot;:&quot;7a228f3d98a5d011f952110c10dc4976&quot;},&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/columns/learncpp&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;title&quot;:&quot;学习C++&quot;,&quot;updated&quot;:1513952410,&quot;imageUrl&quot;:&quot;https://pic1.zhimg.com/v2-bf63794c542fc73b11e17014b7e0d01d_l.jpg&quot;,&quot;isFollowing&quot;:false,&quot;type&quot;:&quot;column&quot;,&quot;id&quot;:&quot;learncpp&quot;},&quot;state&quot;:&quot;accepted&quot;,&quot;id&quot;:1186537}],&quot;id&quot;:34896821,&quot;voteupCount&quot;:8,&quot;upvotedFollowees&quot;:[],&quot;author&quot;:{&quot;isFollowed&quot;:false,&quot;avatarUrlTemplate&quot;:&quot;https://pic1.zhimg.com/v2-cd6d61ad9ef94c41b9e77f8e0f727893_{size}.jpg&quot;,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;陈安&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/people/7a228f3d98a5d011f952110c10dc4976&quot;,&quot;gender&quot;:1,&quot;userType&quot;:&quot;people&quot;,&quot;urlToken&quot;:&quot;bajdcc&quot;,&quot;isAdvertiser&quot;:false,&quot;avatarUrl&quot;:&quot;https://pic1.zhimg.com/v2-cd6d61ad9ef94c41b9e77f8e0f727893_is.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;headline&quot;:&quot;专业研究野生技术&quot;,&quot;badge&quot;:[],&quot;id&quot;:&quot;7a228f3d98a5d011f952110c10dc4976&quot;},&quot;imageWidth&quot;:680,&quot;content&quot;:&quot;&lt;p&gt;克服了自己的懒惰，给我们的jMiniLang增加了一些语法糖，也让它支持了异常的特性。语法糖这东西，懒得不写也可以，只是会让代码变得非常臃肿和丑陋，经过一番努力，目前jMiniLang的语法糖也不少，代码看起来十分飘逸了～&lt;/p&gt;&lt;p&gt;起初看到一篇文章讲用魔法实现Python的尾递归优化&lt;a href=\&quot;https://link.zhihu.com/?target=https%3A//www.jianshu.com/p/376e433214b3\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;Python开启尾递归优化!&lt;/a&gt;，当然，try会影响效率，好在我们jMiniLang本身的效率也不咋地，所以可以尝尝鲜。搞一门语言，尝试那些花哨的东西也不失为一些乐趣。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;Py魔法实现尾递归优化&lt;/h2&gt;&lt;div class=\&quot;highlight\&quot;&gt;&lt;pre&gt;&lt;code class=\&quot;language-python\&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=\&quot;ch\&quot;&gt;#!/usr/bin/env python2.4&lt;/span&gt;\n&lt;span class=\&quot;c1\&quot;&gt;# This program shows off a python decorator(&lt;/span&gt;\n&lt;span class=\&quot;c1\&quot;&gt;# which implements tail call optimization. It&lt;/span&gt;\n&lt;span class=\&quot;c1\&quot;&gt;# does this by throwing an exception if it is&lt;/span&gt;\n&lt;span class=\&quot;c1\&quot;&gt;# it&#x27;s own grandparent, and catching such&lt;/span&gt;\n&lt;span class=\&quot;c1\&quot;&gt;# exceptions to recall the stack.&lt;/span&gt;\n \n&lt;span class=\&quot;kn\&quot;&gt;import&lt;/span&gt; &lt;span class=\&quot;nn\&quot;&gt;sys&lt;/span&gt;\n \n&lt;span class=\&quot;k\&quot;&gt;class&lt;/span&gt; &lt;span class=\&quot;nc\&quot;&gt;TailRecurseException&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;:&lt;/span&gt;\n    &lt;span class=\&quot;k\&quot;&gt;def&lt;/span&gt; &lt;span class=\&quot;nf\&quot;&gt;__init__&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;(&lt;/span&gt;&lt;span class=\&quot;bp\&quot;&gt;self&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;,&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;args&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;,&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;kwargs&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;):&lt;/span&gt;\n        &lt;span class=\&quot;bp\&quot;&gt;self&lt;/span&gt;&lt;span class=\&quot;o\&quot;&gt;.&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;args&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;=&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;args&lt;/span&gt;\n        &lt;span class=\&quot;bp\&quot;&gt;self&lt;/span&gt;&lt;span class=\&quot;o\&quot;&gt;.&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;kwargs&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;=&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;kwargs&lt;/span&gt;\n \n&lt;span class=\&quot;k\&quot;&gt;def&lt;/span&gt; &lt;span class=\&quot;nf\&quot;&gt;tail_call_optimized&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;(&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;g&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;):&lt;/span&gt;\n    &lt;span class=\&quot;sd\&quot;&gt;\&quot;\&quot;\&quot;&lt;/span&gt;\n&lt;span class=\&quot;sd\&quot;&gt;    This function decorates a function with tail call&lt;/span&gt;\n&lt;span class=\&quot;sd\&quot;&gt;    optimization. It does this by throwing an exception&lt;/span&gt;\n&lt;span class=\&quot;sd\&quot;&gt;    if it is it&#x27;s own grandparent, and catching such&lt;/span&gt;\n&lt;span class=\&quot;sd\&quot;&gt;    exceptions to fake the tail call optimization.&lt;/span&gt;\n&lt;span class=\&quot;sd\&quot;&gt; &lt;/span&gt;\n&lt;span class=\&quot;sd\&quot;&gt;    This function fails if the decorated&lt;/span&gt;\n&lt;span class=\&quot;sd\&quot;&gt;    function recurses in a non-tail context.&lt;/span&gt;\n&lt;span class=\&quot;sd\&quot;&gt;    \&quot;\&quot;\&quot;&lt;/span&gt;\n    &lt;span class=\&quot;k\&quot;&gt;def&lt;/span&gt; &lt;span class=\&quot;nf\&quot;&gt;func&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;(&lt;/span&gt;&lt;span class=\&quot;o\&quot;&gt;*&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;args&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;,&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;**&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;kwargs&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;):&lt;/span&gt;\n        &lt;span class=\&quot;n\&quot;&gt;f&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;=&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;sys&lt;/span&gt;&lt;span class=\&quot;o\&quot;&gt;.&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;_getframe&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;()&lt;/span&gt;\n        &lt;span class=\&quot;k\&quot;&gt;if&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;f&lt;/span&gt;&lt;span class=\&quot;o\&quot;&gt;.&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;f_back&lt;/span&gt; &lt;span class=\&quot;ow\&quot;&gt;and&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;f&lt;/span&gt;&lt;span class=\&quot;o\&quot;&gt;.&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;f_back&lt;/span&gt;&lt;span class=\&quot;o\&quot;&gt;.&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;f_back&lt;/span&gt; \\\n            &lt;span class=\&quot;ow\&quot;&gt;and&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;f&lt;/span&gt;&lt;span class=\&quot;o\&quot;&gt;.&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;f_back&lt;/span&gt;&lt;span class=\&quot;o\&quot;&gt;.&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;f_back&lt;/span&gt;&lt;span class=\&quot;o\&quot;&gt;.&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;f_code&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;==&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;f&lt;/span&gt;&lt;span class=\&quot;o\&quot;&gt;.&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;f_code&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;:&lt;/span&gt;\n            &lt;span class=\&quot;k\&quot;&gt;raise&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;TailRecurseException&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;(&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;args&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;,&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;kwargs&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;)&lt;/span&gt;\n        &lt;span class=\&quot;k\&quot;&gt;else&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;:&lt;/span&gt;\n            &lt;span class=\&quot;k\&quot;&gt;while&lt;/span&gt; &lt;span class=\&quot;mi\&quot;&gt;1&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;:&lt;/span&gt;\n                &lt;span class=\&quot;k\&quot;&gt;try&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;:&lt;/span&gt;\n                    &lt;span class=\&quot;k\&quot;&gt;return&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;g&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;(&lt;/span&gt;&lt;span class=\&quot;o\&quot;&gt;*&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;args&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;,&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;**&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;kwargs&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;)&lt;/span&gt;\n                &lt;span class=\&quot;k\&quot;&gt;except&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;TailRecurseException&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;,&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;e&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;:&lt;/span&gt;\n                    &lt;span class=\&quot;n\&quot;&gt;args&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;=&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;e&lt;/span&gt;&lt;span class=\&quot;o\&quot;&gt;.&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;args&lt;/span&gt;\n                    &lt;span class=\&quot;n\&quot;&gt;kwargs&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;=&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;e&lt;/span&gt;&lt;span class=\&quot;o\&quot;&gt;.&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;kwargs&lt;/span&gt;\n    &lt;span class=\&quot;n\&quot;&gt;func&lt;/span&gt;&lt;span class=\&quot;o\&quot;&gt;.&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;__doc__&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;=&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;g&lt;/span&gt;&lt;span class=\&quot;o\&quot;&gt;.&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;__doc__&lt;/span&gt;\n    &lt;span class=\&quot;k\&quot;&gt;return&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;func&lt;/span&gt;\n \n&lt;span class=\&quot;nd\&quot;&gt;@tail_call_optimized&lt;/span&gt;\n&lt;span class=\&quot;k\&quot;&gt;def&lt;/span&gt; &lt;span class=\&quot;nf\&quot;&gt;factorial&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;(&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;n&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;,&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;acc&lt;/span&gt;&lt;span class=\&quot;o\&quot;&gt;=&lt;/span&gt;&lt;span class=\&quot;mi\&quot;&gt;1&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;):&lt;/span&gt;\n    &lt;span class=\&quot;s2\&quot;&gt;\&quot;calculate a factorial\&quot;&lt;/span&gt;\n    &lt;span class=\&quot;k\&quot;&gt;if&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;n&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;==&lt;/span&gt; &lt;span class=\&quot;mi\&quot;&gt;0&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;:&lt;/span&gt;\n        &lt;span class=\&quot;k\&quot;&gt;return&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;acc&lt;/span&gt;\n    &lt;span class=\&quot;k\&quot;&gt;return&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;factorial&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;(&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;n&lt;/span&gt;&lt;span class=\&quot;o\&quot;&gt;-&lt;/span&gt;&lt;span class=\&quot;mi\&quot;&gt;1&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;,&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;n&lt;/span&gt;&lt;span class=\&quot;o\&quot;&gt;*&lt;/span&gt;&lt;span class=\&quot;n\&quot;&gt;acc&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;)&lt;/span&gt;\n \n&lt;span class=\&quot;k\&quot;&gt;print&lt;/span&gt; &lt;span class=\&quot;n\&quot;&gt;factorial&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;(&lt;/span&gt;&lt;span class=\&quot;mi\&quot;&gt;10000&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然这个代码是国外某大神写出来的，各样魔幻，然而即使我能看懂py语言，还是觉得这种写法大写地尴尬。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;jMiniLang魔法实现尾递归优化&lt;/h2&gt;&lt;p&gt;来看看题图中的jMiniLang实现的核心代码：&lt;/p&gt;&lt;div class=\&quot;highlight\&quot;&gt;&lt;pre&gt;&lt;code class=\&quot;language-js\&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=\&quot;kd\&quot;&gt;var&lt;/span&gt; &lt;span class=\&quot;nx\&quot;&gt;g_tail_opt&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;=&lt;/span&gt; &lt;span class=\&quot;nx\&quot;&gt;func&lt;/span&gt; &lt;span class=\&quot;p\&quot;&gt;[&lt;/span&gt;&lt;span class=\&quot;s2\&quot;&gt;\&quot;尾递归优化\&quot;&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;]&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;~&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;(&lt;/span&gt;&lt;span class=\&quot;nx\&quot;&gt;fun&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;,&lt;/span&gt; &lt;span class=\&quot;nx\&quot;&gt;args&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;)&lt;/span&gt; &lt;span class=\&quot;p\&quot;&gt;{&lt;/span&gt;\n    &lt;span class=\&quot;kd\&quot;&gt;var&lt;/span&gt; &lt;span class=\&quot;nx\&quot;&gt;x&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;=&lt;/span&gt; &lt;span class=\&quot;nx\&quot;&gt;lambda&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;(&lt;/span&gt;&lt;span class=\&quot;nx\&quot;&gt;a&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;)&lt;/span&gt; &lt;span class=\&quot;p\&quot;&gt;{&lt;/span&gt; &lt;span class=\&quot;k\&quot;&gt;throw&lt;/span&gt; &lt;span class=\&quot;nx\&quot;&gt;a&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;;&lt;/span&gt; &lt;span class=\&quot;p\&quot;&gt;};&lt;/span&gt;\n    &lt;span class=\&quot;kd\&quot;&gt;var&lt;/span&gt; &lt;span class=\&quot;nx\&quot;&gt;fact&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;=&lt;/span&gt; &lt;span class=\&quot;nx\&quot;&gt;fun&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;(&lt;/span&gt;&lt;span class=\&quot;nx\&quot;&gt;x&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;);&lt;/span&gt;\n    &lt;span class=\&quot;k\&quot;&gt;for&lt;/span&gt; &lt;span class=\&quot;p\&quot;&gt;(;;)&lt;/span&gt; &lt;span class=\&quot;p\&quot;&gt;{&lt;/span&gt;\n        &lt;span class=\&quot;k\&quot;&gt;try&lt;/span&gt; &lt;span class=\&quot;p\&quot;&gt;{&lt;/span&gt;\n            &lt;span class=\&quot;k\&quot;&gt;return&lt;/span&gt; &lt;span class=\&quot;nx\&quot;&gt;g_call_apply&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;(&lt;/span&gt;&lt;span class=\&quot;nx\&quot;&gt;fact&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;,&lt;/span&gt; &lt;span class=\&quot;nx\&quot;&gt;args&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;);&lt;/span&gt;\n        &lt;span class=\&quot;p\&quot;&gt;}&lt;/span&gt; &lt;span class=\&quot;k\&quot;&gt;catch&lt;/span&gt; &lt;span class=\&quot;p\&quot;&gt;(&lt;/span&gt;&lt;span class=\&quot;nx\&quot;&gt;e&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;)&lt;/span&gt; &lt;span class=\&quot;p\&quot;&gt;{&lt;/span&gt;\n            &lt;span class=\&quot;nx\&quot;&gt;args&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;:=&lt;/span&gt; &lt;span class=\&quot;nx\&quot;&gt;e&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;;&lt;/span&gt;\n        &lt;span class=\&quot;p\&quot;&gt;}&lt;/span&gt;\n    &lt;span class=\&quot;p\&quot;&gt;}&lt;/span&gt;\n&lt;span class=\&quot;p\&quot;&gt;};&lt;/span&gt;\n\n&lt;span class=\&quot;c1\&quot;&gt;// 使用&lt;/span&gt;\n&lt;span class=\&quot;nx\&quot;&gt;g_printn&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;(&lt;/span&gt;&lt;span class=\&quot;s2\&quot;&gt;\&quot;Factorial(10) = \&quot;&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;+&lt;/span&gt; &lt;span class=\&quot;nx\&quot;&gt;g_tail_opt&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;(&lt;/span&gt;\n    &lt;span class=\&quot;nx\&quot;&gt;lambda&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;(&lt;/span&gt;&lt;span class=\&quot;nx\&quot;&gt;f&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;)&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=\&quot;nx\&quot;&gt;lambda&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;(&lt;/span&gt;&lt;span class=\&quot;nx\&quot;&gt;n&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;,&lt;/span&gt; &lt;span class=\&quot;nx\&quot;&gt;total&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;)&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=\&quot;nx\&quot;&gt;n&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=\&quot;mi\&quot;&gt;1&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;?&lt;/span&gt; &lt;span class=\&quot;nx\&quot;&gt;total&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;:&lt;/span&gt; &lt;span class=\&quot;nx\&quot;&gt;f&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;([&lt;/span&gt;&lt;span class=\&quot;nx\&quot;&gt;n&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;-&lt;/span&gt; &lt;span class=\&quot;mi\&quot;&gt;1&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;,&lt;/span&gt; &lt;span class=\&quot;nx\&quot;&gt;total&lt;/span&gt; &lt;span class=\&quot;o\&quot;&gt;*&lt;/span&gt; &lt;span class=\&quot;nx\&quot;&gt;n&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;]),&lt;/span&gt;\n    &lt;span class=\&quot;p\&quot;&gt;[&lt;/span&gt;&lt;span class=\&quot;mi\&quot;&gt;10&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;,&lt;/span&gt; &lt;span class=\&quot;mi\&quot;&gt;1&lt;/span&gt;&lt;span class=\&quot;p\&quot;&gt;]));&lt;/span&gt; &lt;span class=\&quot;c1\&quot;&gt;// 3628800&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;哈哈，十分美观，十分满足。&lt;/p&gt;&lt;p&gt;call_apply参见javascript中的语法，代码实现在题图中。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;对代码的分析&lt;/h2&gt;&lt;p&gt;先来看看调用方式，参数是&lt;/p&gt;&lt;div class=\&quot;highlight\&quot;&gt;&lt;pre&gt;&lt;code class=\&quot;language-text\&quot;&gt;&lt;span&gt;&lt;/span&gt;lambda(f) -&amp;gt; lambda(n, total) -&amp;gt; n &amp;lt;= 1 ? total : f([n - 1, total * n])\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;f就是库传进去的，f的作用就是将它的参数throw出来～&lt;/p&gt;&lt;p&gt;看看调用过程(假设调用fact(10))：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;fact = lambda(n, total) -&amp;gt; n &amp;lt;= 1 ? total : throw [n-1, total*n]&lt;/li&gt;&lt;li&gt;--&amp;gt; for(;;) 进入循环，此时args = [10, 1]&lt;/li&gt;&lt;li&gt;return apply(fact, [10,1])&lt;/li&gt;&lt;li&gt;进入 =&amp;gt; return fact(10, 1)&lt;/li&gt;&lt;li&gt;进入 =&amp;gt; return f(9, 10)&lt;/li&gt;&lt;li&gt;进入 =&amp;gt; throw [9, 10]&lt;/li&gt;&lt;li&gt;捕获异常 catch(e)   -&amp;gt;  令 args = e = [9, 10]&lt;/li&gt;&lt;li&gt;--&amp;gt; for(;;) 重新一轮循环 此时args = [9, 10]&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;这里的精髓就是：一般的递归调用会增加栈，解决方法就是将递归调用替换成throw，导致即将要增加栈时，偏偏不，反而销毁一切中间过程中要用的栈，回到最起始的地方，即是for循环，在循环中，捕获throw过来的参数，替换掉原来的args。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;为何try机制可以这样实现尾递归优化呢？因为貌似只有try才有销毁掉调用栈的功能(在jMiniLang语法设计中是这样的)。先前的yield协程机制的实现只是假装替换了下栈，并没有销毁的功能。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;后续计划&lt;/h2&gt;&lt;p&gt;行为树的实现。&lt;/p&gt;&quot;,&quot;commentCount&quot;:2,&quot;linkbox&quot;:{&quot;url&quot;:&quot;&quot;,&quot;category&quot;:&quot;&quot;,&quot;pic&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;},&quot;isTitleImageFullScreen&quot;:false,&quot;type&quot;:&quot;article&quot;,&quot;suggestEdit&quot;:{&quot;status&quot;:false,&quot;url&quot;:&quot;&quot;,&quot;reason&quot;:&quot;&quot;,&quot;tip&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;},&quot;tipjarorsCount&quot;:0,&quot;status&quot;:0,&quot;updated&quot;:1521876600,&quot;reason&quot;:&quot;&quot;,&quot;voting&quot;:0,&quot;created&quot;:1521876286,&quot;url&quot;:&quot;http://zhuanlan.zhihu.com/p/34896821&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;title&quot;:&quot;【jMiniLang】尾递归优化&quot;,&quot;annotationAction&quot;:[],&quot;hasPublishingDraft&quot;:false,&quot;paging&quot;:{},&quot;imageUrl&quot;:&quot;https://pic2.zhimg.com/v2-5e699d912340c4fb8deb66ce79624074_r.jpg&quot;,&quot;isFavorited&quot;:false,&quot;excerptTitle&quot;:&quot;&quot;,&quot;canComment&quot;:{&quot;status&quot;:true,&quot;reason&quot;:&quot;&quot;},&quot;isNormal&quot;:true}},&quot;columns&quot;:{&quot;learncpp&quot;:{&quot;acceptSubmission&quot;:true,&quot;description&quot;:&quot;主要研究操作系统、编译原理、图形学，以及其他有趣的东西&quot;,&quot;author&quot;:{&quot;avatarUrlTemplate&quot;:&quot;https://pic1.zhimg.com/v2-cd6d61ad9ef94c41b9e77f8e0f727893_{size}.jpg&quot;,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;陈安&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/people/7a228f3d98a5d011f952110c10dc4976&quot;,&quot;gender&quot;:1,&quot;userType&quot;:&quot;people&quot;,&quot;urlToken&quot;:&quot;bajdcc&quot;,&quot;isAdvertiser&quot;:false,&quot;avatarUrl&quot;:&quot;https://pic1.zhimg.com/v2-cd6d61ad9ef94c41b9e77f8e0f727893_is.jpg&quot;,&quot;isOrg&quot;:false,&quot;headline&quot;:&quot;专业研究野生技术&quot;,&quot;badge&quot;:[],&quot;id&quot;:&quot;7a228f3d98a5d011f952110c10dc4976&quot;},&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/columns/learncpp&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;title&quot;:&quot;学习C++&quot;,&quot;updated&quot;:1513952410,&quot;imageUrl&quot;:&quot;https://pic1.zhimg.com/v2-bf63794c542fc73b11e17014b7e0d01d_l.jpg&quot;,&quot;isFollowing&quot;:false,&quot;type&quot;:&quot;column&quot;,&quot;id&quot;:&quot;learncpp&quot;}},&quot;topics&quot;:{},&quot;roundtables&quot;:{},&quot;favlists&quot;:{},&quot;comments&quot;:{},&quot;notifications&quot;:{},&quot;ebooks&quot;:{},&quot;activities&quot;:{},&quot;feeds&quot;:{},&quot;pins&quot;:{},&quot;promotions&quot;:{}},&quot;currentUser&quot;:&quot;&quot;,&quot;token&quot;:{&quot;xUDID&quot;:&quot;AKBg1ZkKhQ2PTlCwXsW_Go1kNIYcGW3WMRc=&quot;},&quot;account&quot;:{&quot;lockLevel&quot;:{},&quot;locakTicketStatus&quot;:false,&quot;challenge&quot;:[],&quot;errorStatus&quot;:false,&quot;message&quot;:&quot;&quot;,&quot;isFetching&quot;:false},&quot;notification&quot;:{},&quot;people&quot;:{&quot;profileStatus&quot;:{},&quot;activitiesByUser&quot;:{},&quot;answersByUser&quot;:{},&quot;answersSortByVotesByUser&quot;:{},&quot;answersIncludedByUser&quot;:{},&quot;votedAnswersByUser&quot;:{},&quot;thankedAnswersByUser&quot;:{},&quot;voteAnswersByUser&quot;:{},&quot;thankAnswersByUser&quot;:{},&quot;topicAnswersByUser&quot;:{},&quot;articlesByUser&quot;:{},&quot;articlesSortByVotesByUser&quot;:{},&quot;articlesIncludedByUser&quot;:{},&quot;pinsByUser&quot;:{},&quot;questionsByUser&quot;:{},&quot;commercialQuestionsByUser&quot;:{},&quot;favlistsByUser&quot;:{},&quot;followingByUser&quot;:{},&quot;followersByUser&quot;:{},&quot;mutualsByUser&quot;:{},&quot;followingColumnsByUser&quot;:{},&quot;followingQuestionsByUser&quot;:{},&quot;followingFavlistsByUser&quot;:{},&quot;followingTopicsByUser&quot;:{},&quot;publicationsByUser&quot;:{},&quot;columnsByUser&quot;:{},&quot;allFavlistsByUser&quot;:{},&quot;brands&quot;:null},&quot;env&quot;:{&quot;experiment&quot;:{&quot;ge3&quot;:&quot;ge3_9&quot;,&quot;ge2&quot;:&quot;ge2_1&quot;,&quot;searchSectionStyle&quot;:&quot;compact&quot;,&quot;searchAdvertPosition&quot;:&quot;1&quot;,&quot;growthSearch&quot;:&quot;s2&quot;,&quot;sEI&quot;:&quot;s&quot;,&quot;nwebQAGrowth&quot;:&quot;experiment&quot;,&quot;qawebRelatedReadingsContentControl&quot;:&quot;close&quot;,&quot;liveStore&quot;:&quot;ls_a3_b2_c1_f2&quot;,&quot;nwebSearch&quot;:&quot;nweb_search_heifetz&quot;,&quot;searchHybridTabs&quot;:&quot;pin-3#album-7&quot;,&quot;newSignBg&quot;:&quot;new&quot;,&quot;rt&quot;:&quot;y&quot;,&quot;isOffice&quot;:&quot;false&quot;,&quot;enableTtsPlay&quot;:&quot;post&quot;,&quot;newLiveFeedMediacard&quot;:&quot;new&quot;,&quot;newMobileAppHeader&quot;:&quot;true&quot;,&quot;androidPassThroughPush&quot;:&quot;all&quot;,&quot;hybridZhmoreVideo&quot;:&quot;yes&quot;,&quot;nwebGrowthPeople&quot;:&quot;default&quot;,&quot;nwebSearchSuggest&quot;:&quot;default&quot;,&quot;qrcodeLogin&quot;:&quot;qrcode&quot;,&quot;enableVoteDownReasonMenu&quot;:&quot;enable&quot;,&quot;isShowUnicomFreeEntry&quot;:&quot;unicom_free_entry_off&quot;,&quot;androidSearchTabStyle&quot;:&quot;search_tab_style_b&quot;,&quot;growthBanner&quot;:&quot;default&quot;,&quot;newMobileColumnAppheader&quot;:&quot;new_header&quot;,&quot;androidDbRecommendAction&quot;:&quot;open&quot;,&quot;searchTab&quot;:&quot;collapse&quot;,&quot;zcmLighting&quot;:&quot;zcm&quot;,&quot;androidDbFeedHashTagStyle&quot;:&quot;button&quot;,&quot;appStoreRateDialog&quot;:&quot;close&quot;,&quot;mobileFeedGuide&quot;:&quot;block&quot;,&quot;default&quot;:&quot;None&quot;,&quot;isNewNotiPanel&quot;:&quot;no&quot;,&quot;adR&quot;:&quot;b&quot;,&quot;wechatShareModal&quot;:&quot;wechat_share_modal_show&quot;,&quot;uRe&quot;:&quot;1&quot;,&quot;androidProfilePanel&quot;:&quot;panel_b&quot;},&quot;experimentOrigin&quot;:{&quot;ge3&quot;:&quot;ge3_9&quot;,&quot;ge2&quot;:&quot;ge2_1&quot;,&quot;search_section_style&quot;:&quot;compact&quot;,&quot;search_advert_position&quot;:&quot;1&quot;,&quot;growth_search&quot;:&quot;s2&quot;,&quot;SE_I&quot;:&quot;s&quot;,&quot;nwebQAGrowth&quot;:&quot;experiment&quot;,&quot;qaweb_related_readings_content_control&quot;:&quot;close&quot;,&quot;live_store&quot;:&quot;ls_a3_b2_c1_f2&quot;,&quot;nweb_search&quot;:&quot;nweb_search_heifetz&quot;,&quot;search_hybrid_tabs&quot;:&quot;pin-3#album-7&quot;,&quot;new_sign_bg&quot;:&quot;new&quot;,&quot;rt&quot;:&quot;y&quot;,&quot;is_office&quot;:&quot;false&quot;,&quot;enable_tts_play&quot;:&quot;post&quot;,&quot;new_live_feed_mediacard&quot;:&quot;new&quot;,&quot;new_mobile_app_header&quot;:&quot;true&quot;,&quot;android_pass_through_push&quot;:&quot;all&quot;,&quot;hybrid_zhmore_video&quot;:&quot;yes&quot;,&quot;nweb_growth_people&quot;:&quot;default&quot;,&quot;nweb_search_suggest&quot;:&quot;default&quot;,&quot;qrcode_login&quot;:&quot;qrcode&quot;,&quot;enable_vote_down_reason_menu&quot;:&quot;enable&quot;,&quot;is_show_unicom_free_entry&quot;:&quot;unicom_free_entry_off&quot;,&quot;android_search_tab_style&quot;:&quot;search_tab_style_b&quot;,&quot;growth_banner&quot;:&quot;default&quot;,&quot;new_mobile_column_appheader&quot;:&quot;new_header&quot;,&quot;android_db_recommend_action&quot;:&quot;open&quot;,&quot;search_tab&quot;:&quot;collapse&quot;,&quot;zcm-lighting&quot;:&quot;zcm&quot;,&quot;android_db_feed_hash_tag_style&quot;:&quot;button&quot;,&quot;app_store_rate_dialog&quot;:&quot;close&quot;,&quot;mobile_feed_guide&quot;:&quot;block&quot;,&quot;default&quot;:&quot;None&quot;,&quot;is_new_noti_panel&quot;:&quot;no&quot;,&quot;ad_r&quot;:&quot;b&quot;,&quot;wechat_share_modal&quot;:&quot;wechat_share_modal_show&quot;,&quot;u_re&quot;:&quot;1&quot;,&quot;android_profile_panel&quot;:&quot;panel_b&quot;},&quot;userAgent&quot;:{&quot;Edge&quot;:false,&quot;Wechat&quot;:false,&quot;Weibo&quot;:false,&quot;QQ&quot;:false,&quot;Mobile&quot;:false,&quot;Android&quot;:false,&quot;iOS&quot;:false,&quot;isAppleDevice&quot;:false,&quot;Zhihu&quot;:false,&quot;ZhihuHybrid&quot;:false,&quot;isBot&quot;:false,&quot;Tablet&quot;:false,&quot;isWebView&quot;:false,&quot;origin&quot;:&quot;Wget/1.19.1 (cygwin)&quot;},&quot;trafficSource&quot;:&quot;production&quot;,&quot;edition&quot;:{&quot;baidu&quot;:false,&quot;yidianzixun&quot;:false,&quot;sogou&quot;:false},&quot;theme&quot;:&quot;light&quot;,&quot;referer&quot;:&quot;&quot;,&quot;conf&quot;:{},&quot;ipInfo&quot;:{&quot;cityName&quot;:&quot;Suzhou&quot;,&quot;countryName&quot;:&quot;China&quot;,&quot;regionName&quot;:&quot;Jiangsu&quot;,&quot;countryCode&quot;:&quot;CN&quot;}},&quot;me&quot;:{&quot;organizationProfileStatus&quot;:{},&quot;columnContributions&quot;:[]},&quot;comments&quot;:{&quot;pagination&quot;:{},&quot;collapsed&quot;:{},&quot;reverse&quot;:{},&quot;reviewing&quot;:{},&quot;conversation&quot;:{},&quot;parent&quot;:{}},&quot;pushNotifications&quot;:{&quot;default&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[]},&quot;follow&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[]},&quot;vote-thank&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[]},&quot;currentTab&quot;:&quot;default&quot;,&quot;notificationsCount&quot;:{&quot;default&quot;:0,&quot;follow&quot;:0,&quot;vote-thank&quot;:0}},&quot;messages&quot;:{&quot;data&quot;:{},&quot;currentTab&quot;:&quot;common&quot;,&quot;messageCount&quot;:0},&quot;register&quot;:{&quot;registerValidateSucceeded&quot;:null,&quot;registerValidateErrors&quot;:{},&quot;registerConfirmError&quot;:null,&quot;sendDigitsError&quot;:null,&quot;registerConfirmSucceeded&quot;:null},&quot;login&quot;:{&quot;loginUnregisteredError&quot;:false,&quot;loginBindWechatError&quot;:false,&quot;loginConfirmError&quot;:null,&quot;sendDigitsError&quot;:null,&quot;validateDigitsError&quot;:false,&quot;loginConfirmSucceeded&quot;:null,&quot;qrcodeLoginToken&quot;:&quot;&quot;,&quot;qrcodeLoginScanStatus&quot;:0,&quot;qrcodeLoginError&quot;:null,&quot;qrcodeLoginReturnNewToken&quot;:false},&quot;active&quot;:{&quot;sendDigitsError&quot;:null,&quot;activeConfirmSucceeded&quot;:null,&quot;activeConfirmError&quot;:null},&quot;sms&quot;:{&quot;supportedCountries&quot;:[]},&quot;recommendation&quot;:{},&quot;shareTexts&quot;:{},&quot;articles&quot;:{&quot;voters&quot;:{}},&quot;previewPost&quot;:{},&quot;favlists&quot;:{&quot;relations&quot;:{}},&quot;columns&quot;:{&quot;voters&quot;:{}},&quot;reward&quot;:{&quot;answer&quot;:{},&quot;article&quot;:{},&quot;question&quot;:{}},&quot;video&quot;:{&quot;data&quot;:{}},&quot;switches&quot;:{},&quot;captcha&quot;:{&quot;captchaNeeded&quot;:false,&quot;captchaValidated&quot;:false,&quot;captchaBase64String&quot;:null,&quot;captchaValidationMessage&quot;:null,&quot;loginCaptchaExpires&quot;:false},&quot;topstory&quot;:{&quot;topstorys&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;afterId&quot;:0,&quot;items&quot;:[],&quot;next&quot;:null},&quot;sidebar&quot;:null,&quot;announcement&quot;:{},&quot;hotList&quot;:[]},&quot;column&quot;:{},&quot;articleContribution&quot;:{&quot;contributeRequests&quot;:[],&quot;deleteContributeIdList&quot;:[],&quot;handledContributeIdList&quot;:[],&quot;recommendedColumns&quot;:[],&quot;pinnedColumns&quot;:[],&quot;sentContributeRequestsIdList&quot;:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,&quot;learncpp&quot;]},&quot;columnContribution&quot;:{&quot;recommendedContributors&quot;:[],&quot;contributionInvitation&quot;:null}}" data-config="{&quot;apiAddress&quot;:&quot;https://www.zhihu.com/api/v4/&quot;,&quot;deployEnv&quot;:&quot;production&quot;,&quot;useOAuth&quot;:true}"></div><script src="https://static.zhihu.com/heifetz/vendor.c1ed8d16a6988c3797dd.js"></script><script src="https://static.zhihu.com/heifetz/column.raven.d24a397f653dedadc7e2.js" async=""></script><script src="https://static.zhihu.com/heifetz/column.app.963a3fb214079c6a7893.js"></script><script></script></body></html>